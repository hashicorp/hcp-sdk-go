// Code generated by go-swagger; DO NOT EDIT.

package service_principals_service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewServicePrincipalsServiceGetServicePrincipalParams creates a new ServicePrincipalsServiceGetServicePrincipalParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewServicePrincipalsServiceGetServicePrincipalParams() *ServicePrincipalsServiceGetServicePrincipalParams {
	return &ServicePrincipalsServiceGetServicePrincipalParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewServicePrincipalsServiceGetServicePrincipalParamsWithTimeout creates a new ServicePrincipalsServiceGetServicePrincipalParams object
// with the ability to set a timeout on a request.
func NewServicePrincipalsServiceGetServicePrincipalParamsWithTimeout(timeout time.Duration) *ServicePrincipalsServiceGetServicePrincipalParams {
	return &ServicePrincipalsServiceGetServicePrincipalParams{
		timeout: timeout,
	}
}

// NewServicePrincipalsServiceGetServicePrincipalParamsWithContext creates a new ServicePrincipalsServiceGetServicePrincipalParams object
// with the ability to set a context for a request.
func NewServicePrincipalsServiceGetServicePrincipalParamsWithContext(ctx context.Context) *ServicePrincipalsServiceGetServicePrincipalParams {
	return &ServicePrincipalsServiceGetServicePrincipalParams{
		Context: ctx,
	}
}

// NewServicePrincipalsServiceGetServicePrincipalParamsWithHTTPClient creates a new ServicePrincipalsServiceGetServicePrincipalParams object
// with the ability to set a custom HTTPClient for a request.
func NewServicePrincipalsServiceGetServicePrincipalParamsWithHTTPClient(client *http.Client) *ServicePrincipalsServiceGetServicePrincipalParams {
	return &ServicePrincipalsServiceGetServicePrincipalParams{
		HTTPClient: client,
	}
}

/*
ServicePrincipalsServiceGetServicePrincipalParams contains all the parameters to send to the API endpoint

	for the service principals service get service principal operation.

	Typically these are written to a http.Request.
*/
type ServicePrincipalsServiceGetServicePrincipalParams struct {

	/* ResourceName.

	   resource_name is the resource name of the service principal to retrieve.
	*/
	ResourceName string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the service principals service get service principal params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *ServicePrincipalsServiceGetServicePrincipalParams) WithDefaults() *ServicePrincipalsServiceGetServicePrincipalParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the service principals service get service principal params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *ServicePrincipalsServiceGetServicePrincipalParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the service principals service get service principal params
func (o *ServicePrincipalsServiceGetServicePrincipalParams) WithTimeout(timeout time.Duration) *ServicePrincipalsServiceGetServicePrincipalParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the service principals service get service principal params
func (o *ServicePrincipalsServiceGetServicePrincipalParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the service principals service get service principal params
func (o *ServicePrincipalsServiceGetServicePrincipalParams) WithContext(ctx context.Context) *ServicePrincipalsServiceGetServicePrincipalParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the service principals service get service principal params
func (o *ServicePrincipalsServiceGetServicePrincipalParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the service principals service get service principal params
func (o *ServicePrincipalsServiceGetServicePrincipalParams) WithHTTPClient(client *http.Client) *ServicePrincipalsServiceGetServicePrincipalParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the service principals service get service principal params
func (o *ServicePrincipalsServiceGetServicePrincipalParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithResourceName adds the resourceName to the service principals service get service principal params
func (o *ServicePrincipalsServiceGetServicePrincipalParams) WithResourceName(resourceName string) *ServicePrincipalsServiceGetServicePrincipalParams {
	o.SetResourceName(resourceName)
	return o
}

// SetResourceName adds the resourceName to the service principals service get service principal params
func (o *ServicePrincipalsServiceGetServicePrincipalParams) SetResourceName(resourceName string) {
	o.ResourceName = resourceName
}

// WriteToRequest writes these params to a swagger request
func (o *ServicePrincipalsServiceGetServicePrincipalParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param resource_name
	if err := r.SetPathParam("resource_name", o.ResourceName); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
