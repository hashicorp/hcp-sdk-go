// Code generated by go-swagger; DO NOT EDIT.

package workflow_library

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	cloud "github.com/hashicorp/hcp-sdk-go/clients/cloud-shared/v1/models"
	"github.com/hashicorp/hcp-sdk-go/clients/cloud-waypoint-service/preview/2022-02-03/models"
)

// WorkflowLibraryGetFromLibraryReader is a Reader for the WorkflowLibraryGetFromLibrary structure.
type WorkflowLibraryGetFromLibraryReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *WorkflowLibraryGetFromLibraryReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewWorkflowLibraryGetFromLibraryOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewWorkflowLibraryGetFromLibraryDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewWorkflowLibraryGetFromLibraryOK creates a WorkflowLibraryGetFromLibraryOK with default headers values
func NewWorkflowLibraryGetFromLibraryOK() *WorkflowLibraryGetFromLibraryOK {
	return &WorkflowLibraryGetFromLibraryOK{}
}

/*
WorkflowLibraryGetFromLibraryOK describes a response with status code 200, with default header values.

A successful response.
*/
type WorkflowLibraryGetFromLibraryOK struct {
	Payload *models.HashicorpCloudWaypointGetFromLibraryResponse
}

// IsSuccess returns true when this workflow library get from library o k response has a 2xx status code
func (o *WorkflowLibraryGetFromLibraryOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this workflow library get from library o k response has a 3xx status code
func (o *WorkflowLibraryGetFromLibraryOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this workflow library get from library o k response has a 4xx status code
func (o *WorkflowLibraryGetFromLibraryOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this workflow library get from library o k response has a 5xx status code
func (o *WorkflowLibraryGetFromLibraryOK) IsServerError() bool {
	return false
}

// IsCode returns true when this workflow library get from library o k response a status code equal to that given
func (o *WorkflowLibraryGetFromLibraryOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the workflow library get from library o k response
func (o *WorkflowLibraryGetFromLibraryOK) Code() int {
	return 200
}

func (o *WorkflowLibraryGetFromLibraryOK) Error() string {
	return fmt.Sprintf("[GET /waypoint/2022-02-03/namespace/workflows/{id}][%d] workflowLibraryGetFromLibraryOK  %+v", 200, o.Payload)
}

func (o *WorkflowLibraryGetFromLibraryOK) String() string {
	return fmt.Sprintf("[GET /waypoint/2022-02-03/namespace/workflows/{id}][%d] workflowLibraryGetFromLibraryOK  %+v", 200, o.Payload)
}

func (o *WorkflowLibraryGetFromLibraryOK) GetPayload() *models.HashicorpCloudWaypointGetFromLibraryResponse {
	return o.Payload
}

func (o *WorkflowLibraryGetFromLibraryOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HashicorpCloudWaypointGetFromLibraryResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewWorkflowLibraryGetFromLibraryDefault creates a WorkflowLibraryGetFromLibraryDefault with default headers values
func NewWorkflowLibraryGetFromLibraryDefault(code int) *WorkflowLibraryGetFromLibraryDefault {
	return &WorkflowLibraryGetFromLibraryDefault{
		_statusCode: code,
	}
}

/*
WorkflowLibraryGetFromLibraryDefault describes a response with status code -1, with default header values.

An unexpected error response.
*/
type WorkflowLibraryGetFromLibraryDefault struct {
	_statusCode int

	Payload *cloud.GrpcGatewayRuntimeError
}

// IsSuccess returns true when this workflow library get from library default response has a 2xx status code
func (o *WorkflowLibraryGetFromLibraryDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this workflow library get from library default response has a 3xx status code
func (o *WorkflowLibraryGetFromLibraryDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this workflow library get from library default response has a 4xx status code
func (o *WorkflowLibraryGetFromLibraryDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this workflow library get from library default response has a 5xx status code
func (o *WorkflowLibraryGetFromLibraryDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this workflow library get from library default response a status code equal to that given
func (o *WorkflowLibraryGetFromLibraryDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the workflow library get from library default response
func (o *WorkflowLibraryGetFromLibraryDefault) Code() int {
	return o._statusCode
}

func (o *WorkflowLibraryGetFromLibraryDefault) Error() string {
	return fmt.Sprintf("[GET /waypoint/2022-02-03/namespace/workflows/{id}][%d] WorkflowLibrary_GetFromLibrary default  %+v", o._statusCode, o.Payload)
}

func (o *WorkflowLibraryGetFromLibraryDefault) String() string {
	return fmt.Sprintf("[GET /waypoint/2022-02-03/namespace/workflows/{id}][%d] WorkflowLibrary_GetFromLibrary default  %+v", o._statusCode, o.Payload)
}

func (o *WorkflowLibraryGetFromLibraryDefault) GetPayload() *cloud.GrpcGatewayRuntimeError {
	return o.Payload
}

func (o *WorkflowLibraryGetFromLibraryDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(cloud.GrpcGatewayRuntimeError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
