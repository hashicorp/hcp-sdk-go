// Code generated by go-swagger; DO NOT EDIT.

package waypoint

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewWaypointListHostnames2Params creates a new WaypointListHostnames2Params object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewWaypointListHostnames2Params() *WaypointListHostnames2Params {
	return &WaypointListHostnames2Params{
		timeout: cr.DefaultTimeout,
	}
}

// NewWaypointListHostnames2ParamsWithTimeout creates a new WaypointListHostnames2Params object
// with the ability to set a timeout on a request.
func NewWaypointListHostnames2ParamsWithTimeout(timeout time.Duration) *WaypointListHostnames2Params {
	return &WaypointListHostnames2Params{
		timeout: timeout,
	}
}

// NewWaypointListHostnames2ParamsWithContext creates a new WaypointListHostnames2Params object
// with the ability to set a context for a request.
func NewWaypointListHostnames2ParamsWithContext(ctx context.Context) *WaypointListHostnames2Params {
	return &WaypointListHostnames2Params{
		Context: ctx,
	}
}

// NewWaypointListHostnames2ParamsWithHTTPClient creates a new WaypointListHostnames2Params object
// with the ability to set a custom HTTPClient for a request.
func NewWaypointListHostnames2ParamsWithHTTPClient(client *http.Client) *WaypointListHostnames2Params {
	return &WaypointListHostnames2Params{
		HTTPClient: client,
	}
}

/*
WaypointListHostnames2Params contains all the parameters to send to the API endpoint

	for the waypoint list hostnames2 operation.

	Typically these are written to a http.Request.
*/
type WaypointListHostnames2Params struct {

	/* NamespaceID.

	   namespace_id is the id of the namespace.
	*/
	NamespaceID string

	// TargetApplicationApplicationApplication.
	TargetApplicationApplicationApplication string

	// TargetApplicationApplicationProject.
	TargetApplicationApplicationProject string

	// TargetApplicationWorkspaceWorkspace.
	TargetApplicationWorkspaceWorkspace string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the waypoint list hostnames2 params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *WaypointListHostnames2Params) WithDefaults() *WaypointListHostnames2Params {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the waypoint list hostnames2 params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *WaypointListHostnames2Params) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the waypoint list hostnames2 params
func (o *WaypointListHostnames2Params) WithTimeout(timeout time.Duration) *WaypointListHostnames2Params {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the waypoint list hostnames2 params
func (o *WaypointListHostnames2Params) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the waypoint list hostnames2 params
func (o *WaypointListHostnames2Params) WithContext(ctx context.Context) *WaypointListHostnames2Params {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the waypoint list hostnames2 params
func (o *WaypointListHostnames2Params) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the waypoint list hostnames2 params
func (o *WaypointListHostnames2Params) WithHTTPClient(client *http.Client) *WaypointListHostnames2Params {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the waypoint list hostnames2 params
func (o *WaypointListHostnames2Params) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithNamespaceID adds the namespaceID to the waypoint list hostnames2 params
func (o *WaypointListHostnames2Params) WithNamespaceID(namespaceID string) *WaypointListHostnames2Params {
	o.SetNamespaceID(namespaceID)
	return o
}

// SetNamespaceID adds the namespaceId to the waypoint list hostnames2 params
func (o *WaypointListHostnames2Params) SetNamespaceID(namespaceID string) {
	o.NamespaceID = namespaceID
}

// WithTargetApplicationApplicationApplication adds the targetApplicationApplicationApplication to the waypoint list hostnames2 params
func (o *WaypointListHostnames2Params) WithTargetApplicationApplicationApplication(targetApplicationApplicationApplication string) *WaypointListHostnames2Params {
	o.SetTargetApplicationApplicationApplication(targetApplicationApplicationApplication)
	return o
}

// SetTargetApplicationApplicationApplication adds the targetApplicationApplicationApplication to the waypoint list hostnames2 params
func (o *WaypointListHostnames2Params) SetTargetApplicationApplicationApplication(targetApplicationApplicationApplication string) {
	o.TargetApplicationApplicationApplication = targetApplicationApplicationApplication
}

// WithTargetApplicationApplicationProject adds the targetApplicationApplicationProject to the waypoint list hostnames2 params
func (o *WaypointListHostnames2Params) WithTargetApplicationApplicationProject(targetApplicationApplicationProject string) *WaypointListHostnames2Params {
	o.SetTargetApplicationApplicationProject(targetApplicationApplicationProject)
	return o
}

// SetTargetApplicationApplicationProject adds the targetApplicationApplicationProject to the waypoint list hostnames2 params
func (o *WaypointListHostnames2Params) SetTargetApplicationApplicationProject(targetApplicationApplicationProject string) {
	o.TargetApplicationApplicationProject = targetApplicationApplicationProject
}

// WithTargetApplicationWorkspaceWorkspace adds the targetApplicationWorkspaceWorkspace to the waypoint list hostnames2 params
func (o *WaypointListHostnames2Params) WithTargetApplicationWorkspaceWorkspace(targetApplicationWorkspaceWorkspace string) *WaypointListHostnames2Params {
	o.SetTargetApplicationWorkspaceWorkspace(targetApplicationWorkspaceWorkspace)
	return o
}

// SetTargetApplicationWorkspaceWorkspace adds the targetApplicationWorkspaceWorkspace to the waypoint list hostnames2 params
func (o *WaypointListHostnames2Params) SetTargetApplicationWorkspaceWorkspace(targetApplicationWorkspaceWorkspace string) {
	o.TargetApplicationWorkspaceWorkspace = targetApplicationWorkspaceWorkspace
}

// WriteToRequest writes these params to a swagger request
func (o *WaypointListHostnames2Params) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param namespace_id
	if err := r.SetPathParam("namespace_id", o.NamespaceID); err != nil {
		return err
	}

	// path param target.application.application.application
	if err := r.SetPathParam("target.application.application.application", o.TargetApplicationApplicationApplication); err != nil {
		return err
	}

	// path param target.application.application.project
	if err := r.SetPathParam("target.application.application.project", o.TargetApplicationApplicationProject); err != nil {
		return err
	}

	// path param target.application.workspace.workspace
	if err := r.SetPathParam("target.application.workspace.workspace", o.TargetApplicationWorkspaceWorkspace); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
