// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// HashicorpWaypointJobUpResult UpResult is the result of an UpOp. Because "up" calls other operations,
// the Result message will set the build, deploy, push, and release results.
//
// swagger:model hashicorp.waypoint.Job.UpResult
type HashicorpWaypointJobUpResult struct {

	// app_url is the HashiCorp URL service URL for the entire application.
	// Example: mistakenly-crucial-malamute.waypoint.run. If there are multiple
	// hostnames registered for the application, this always picks the first one.
	//
	// This can be blank if the URL service is disabled or errored.
	AppURL string `json:"app_url,omitempty"`

	// deploy_url is the HashiCorp URL service URL for this specific deploy.
	// Example: mistakenly-crucial-malamute--v1.waypoint.run. Similar to app_url,
	// if there are multiple registered hostnames for the application, this
	// always picks the first one.
	//
	// This can be blank if the URL service is disabled or errored.
	DeployURL string `json:"deploy_url,omitempty"`

	// release_url is the equivalent of Release.Url. This is the URL that
	// the release plugin generates directly from the platform. For example,
	// on AWS this might be an ALB addr, on K8S this might be a load balancer
	// addr, etc.
	//
	// This can be empty if the release plugin does not support getting a URL.
	ReleaseURL string `json:"release_url,omitempty"`
}

// Validate validates this hashicorp waypoint job up result
func (m *HashicorpWaypointJobUpResult) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this hashicorp waypoint job up result based on context it is used
func (m *HashicorpWaypointJobUpResult) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *HashicorpWaypointJobUpResult) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *HashicorpWaypointJobUpResult) UnmarshalBinary(b []byte) error {
	var res HashicorpWaypointJobUpResult
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
