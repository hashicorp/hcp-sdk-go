// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// HashicorpWaypointTerraformTFRunState hashicorp waypoint terraform t f run state
//
// swagger:model hashicorp.waypoint.Terraform.TFRunState
type HashicorpWaypointTerraformTFRunState string

func NewHashicorpWaypointTerraformTFRunState(value HashicorpWaypointTerraformTFRunState) *HashicorpWaypointTerraformTFRunState {
	return &value
}

// Pointer returns a pointer to a freshly-allocated HashicorpWaypointTerraformTFRunState.
func (m HashicorpWaypointTerraformTFRunState) Pointer() *HashicorpWaypointTerraformTFRunState {
	return &m
}

const (

	// HashicorpWaypointTerraformTFRunStateUNKNOWN captures enum value "UNKNOWN"
	HashicorpWaypointTerraformTFRunStateUNKNOWN HashicorpWaypointTerraformTFRunState = "UNKNOWN"

	// HashicorpWaypointTerraformTFRunStateRUNNING captures enum value "RUNNING"
	HashicorpWaypointTerraformTFRunStateRUNNING HashicorpWaypointTerraformTFRunState = "RUNNING"

	// HashicorpWaypointTerraformTFRunStateSUCCESS captures enum value "SUCCESS"
	HashicorpWaypointTerraformTFRunStateSUCCESS HashicorpWaypointTerraformTFRunState = "SUCCESS"

	// HashicorpWaypointTerraformTFRunStateERROR captures enum value "ERROR"
	HashicorpWaypointTerraformTFRunStateERROR HashicorpWaypointTerraformTFRunState = "ERROR"
)

// for schema
var hashicorpWaypointTerraformTFRunStateEnum []interface{}

func init() {
	var res []HashicorpWaypointTerraformTFRunState
	if err := json.Unmarshal([]byte(`["UNKNOWN","RUNNING","SUCCESS","ERROR"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		hashicorpWaypointTerraformTFRunStateEnum = append(hashicorpWaypointTerraformTFRunStateEnum, v)
	}
}

func (m HashicorpWaypointTerraformTFRunState) validateHashicorpWaypointTerraformTFRunStateEnum(path, location string, value HashicorpWaypointTerraformTFRunState) error {
	if err := validate.EnumCase(path, location, value, hashicorpWaypointTerraformTFRunStateEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this hashicorp waypoint terraform t f run state
func (m HashicorpWaypointTerraformTFRunState) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateHashicorpWaypointTerraformTFRunStateEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this hashicorp waypoint terraform t f run state based on context it is used
func (m HashicorpWaypointTerraformTFRunState) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
