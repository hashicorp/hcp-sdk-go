// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// HashicorpWaypointStatusReportResourceHealth the state of overall health of a deployed application
//
// swagger:model hashicorp.waypoint.StatusReport.Resource.Health
type HashicorpWaypointStatusReportResourceHealth string

func NewHashicorpWaypointStatusReportResourceHealth(value HashicorpWaypointStatusReportResourceHealth) *HashicorpWaypointStatusReportResourceHealth {
	return &value
}

// Pointer returns a pointer to a freshly-allocated HashicorpWaypointStatusReportResourceHealth.
func (m HashicorpWaypointStatusReportResourceHealth) Pointer() *HashicorpWaypointStatusReportResourceHealth {
	return &m
}

const (

	// HashicorpWaypointStatusReportResourceHealthUNKNOWN captures enum value "UNKNOWN"
	HashicorpWaypointStatusReportResourceHealthUNKNOWN HashicorpWaypointStatusReportResourceHealth = "UNKNOWN"

	// HashicorpWaypointStatusReportResourceHealthALIVE captures enum value "ALIVE"
	HashicorpWaypointStatusReportResourceHealthALIVE HashicorpWaypointStatusReportResourceHealth = "ALIVE"

	// HashicorpWaypointStatusReportResourceHealthREADY captures enum value "READY"
	HashicorpWaypointStatusReportResourceHealthREADY HashicorpWaypointStatusReportResourceHealth = "READY"

	// HashicorpWaypointStatusReportResourceHealthDOWN captures enum value "DOWN"
	HashicorpWaypointStatusReportResourceHealthDOWN HashicorpWaypointStatusReportResourceHealth = "DOWN"

	// HashicorpWaypointStatusReportResourceHealthMISSING captures enum value "MISSING"
	HashicorpWaypointStatusReportResourceHealthMISSING HashicorpWaypointStatusReportResourceHealth = "MISSING"

	// HashicorpWaypointStatusReportResourceHealthPARTIAL captures enum value "PARTIAL"
	HashicorpWaypointStatusReportResourceHealthPARTIAL HashicorpWaypointStatusReportResourceHealth = "PARTIAL"
)

// for schema
var hashicorpWaypointStatusReportResourceHealthEnum []interface{}

func init() {
	var res []HashicorpWaypointStatusReportResourceHealth
	if err := json.Unmarshal([]byte(`["UNKNOWN","ALIVE","READY","DOWN","MISSING","PARTIAL"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		hashicorpWaypointStatusReportResourceHealthEnum = append(hashicorpWaypointStatusReportResourceHealthEnum, v)
	}
}

func (m HashicorpWaypointStatusReportResourceHealth) validateHashicorpWaypointStatusReportResourceHealthEnum(path, location string, value HashicorpWaypointStatusReportResourceHealth) error {
	if err := validate.EnumCase(path, location, value, hashicorpWaypointStatusReportResourceHealthEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this hashicorp waypoint status report resource health
func (m HashicorpWaypointStatusReportResourceHealth) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateHashicorpWaypointStatusReportResourceHealthEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this hashicorp waypoint status report resource health based on context it is used
func (m HashicorpWaypointStatusReportResourceHealth) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
