// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// HashicorpWaypointPipelineRunState hashicorp waypoint pipeline run state
//
// swagger:model hashicorp.waypoint.PipelineRun.State
type HashicorpWaypointPipelineRunState string

func NewHashicorpWaypointPipelineRunState(value HashicorpWaypointPipelineRunState) *HashicorpWaypointPipelineRunState {
	return &value
}

// Pointer returns a pointer to a freshly-allocated HashicorpWaypointPipelineRunState.
func (m HashicorpWaypointPipelineRunState) Pointer() *HashicorpWaypointPipelineRunState {
	return &m
}

const (

	// HashicorpWaypointPipelineRunStateUNKNOWN captures enum value "UNKNOWN"
	HashicorpWaypointPipelineRunStateUNKNOWN HashicorpWaypointPipelineRunState = "UNKNOWN"

	// HashicorpWaypointPipelineRunStatePENDING captures enum value "PENDING"
	HashicorpWaypointPipelineRunStatePENDING HashicorpWaypointPipelineRunState = "PENDING"

	// HashicorpWaypointPipelineRunStateSTARTING captures enum value "STARTING"
	HashicorpWaypointPipelineRunStateSTARTING HashicorpWaypointPipelineRunState = "STARTING"

	// HashicorpWaypointPipelineRunStateRUNNING captures enum value "RUNNING"
	HashicorpWaypointPipelineRunStateRUNNING HashicorpWaypointPipelineRunState = "RUNNING"

	// HashicorpWaypointPipelineRunStateERROR captures enum value "ERROR"
	HashicorpWaypointPipelineRunStateERROR HashicorpWaypointPipelineRunState = "ERROR"

	// HashicorpWaypointPipelineRunStateCANCELLED captures enum value "CANCELLED"
	HashicorpWaypointPipelineRunStateCANCELLED HashicorpWaypointPipelineRunState = "CANCELLED"

	// HashicorpWaypointPipelineRunStateSUCCESS captures enum value "SUCCESS"
	HashicorpWaypointPipelineRunStateSUCCESS HashicorpWaypointPipelineRunState = "SUCCESS"
)

// for schema
var hashicorpWaypointPipelineRunStateEnum []interface{}

func init() {
	var res []HashicorpWaypointPipelineRunState
	if err := json.Unmarshal([]byte(`["UNKNOWN","PENDING","STARTING","RUNNING","ERROR","CANCELLED","SUCCESS"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		hashicorpWaypointPipelineRunStateEnum = append(hashicorpWaypointPipelineRunStateEnum, v)
	}
}

func (m HashicorpWaypointPipelineRunState) validateHashicorpWaypointPipelineRunStateEnum(path, location string, value HashicorpWaypointPipelineRunState) error {
	if err := validate.EnumCase(path, location, value, hashicorpWaypointPipelineRunStateEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this hashicorp waypoint pipeline run state
func (m HashicorpWaypointPipelineRunState) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateHashicorpWaypointPipelineRunStateEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this hashicorp waypoint pipeline run state based on context it is used
func (m HashicorpWaypointPipelineRunState) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
