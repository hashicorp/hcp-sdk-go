// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// HashicorpWaypointOperationPhysicalState PhysicalState is the state of any physical resources associated with
// an operation. A physical resource for example is the actual container
// that might be created alongside an operation.
//
// swagger:model hashicorp.waypoint.Operation.PhysicalState
type HashicorpWaypointOperationPhysicalState string

func NewHashicorpWaypointOperationPhysicalState(value HashicorpWaypointOperationPhysicalState) *HashicorpWaypointOperationPhysicalState {
	return &value
}

// Pointer returns a pointer to a freshly-allocated HashicorpWaypointOperationPhysicalState.
func (m HashicorpWaypointOperationPhysicalState) Pointer() *HashicorpWaypointOperationPhysicalState {
	return &m
}

const (

	// HashicorpWaypointOperationPhysicalStateUNKNOWN captures enum value "UNKNOWN"
	HashicorpWaypointOperationPhysicalStateUNKNOWN HashicorpWaypointOperationPhysicalState = "UNKNOWN"

	// HashicorpWaypointOperationPhysicalStatePENDING captures enum value "PENDING"
	HashicorpWaypointOperationPhysicalStatePENDING HashicorpWaypointOperationPhysicalState = "PENDING"

	// HashicorpWaypointOperationPhysicalStateCREATED captures enum value "CREATED"
	HashicorpWaypointOperationPhysicalStateCREATED HashicorpWaypointOperationPhysicalState = "CREATED"

	// HashicorpWaypointOperationPhysicalStateDESTROYED captures enum value "DESTROYED"
	HashicorpWaypointOperationPhysicalStateDESTROYED HashicorpWaypointOperationPhysicalState = "DESTROYED"
)

// for schema
var hashicorpWaypointOperationPhysicalStateEnum []interface{}

func init() {
	var res []HashicorpWaypointOperationPhysicalState
	if err := json.Unmarshal([]byte(`["UNKNOWN","PENDING","CREATED","DESTROYED"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		hashicorpWaypointOperationPhysicalStateEnum = append(hashicorpWaypointOperationPhysicalStateEnum, v)
	}
}

func (m HashicorpWaypointOperationPhysicalState) validateHashicorpWaypointOperationPhysicalStateEnum(path, location string, value HashicorpWaypointOperationPhysicalState) error {
	if err := validate.EnumCase(path, location, value, hashicorpWaypointOperationPhysicalStateEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this hashicorp waypoint operation physical state
func (m HashicorpWaypointOperationPhysicalState) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateHashicorpWaypointOperationPhysicalStateEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this hashicorp waypoint operation physical state based on context it is used
func (m HashicorpWaypointOperationPhysicalState) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
