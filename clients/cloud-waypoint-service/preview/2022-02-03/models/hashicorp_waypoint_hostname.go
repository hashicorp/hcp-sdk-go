// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// HashicorpWaypointHostname hashicorp waypoint hostname
//
// swagger:model hashicorp.waypoint.Hostname
type HashicorpWaypointHostname struct {

	// fqdn is the fully qualified domain, such as "fabulous-panda.waypoint.run"
	Fqdn string `json:"fqdn,omitempty"`

	// hostname alone, such as "fabulous-panda"
	Hostname string `json:"hostname,omitempty"`

	// target_labels are the raw label targets given to the URL service.
	// We can't reproduce the richer "Target" structure yet but in the future
	// we may expose that.
	TargetLabels map[string]string `json:"target_labels,omitempty"`
}

// Validate validates this hashicorp waypoint hostname
func (m *HashicorpWaypointHostname) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this hashicorp waypoint hostname based on context it is used
func (m *HashicorpWaypointHostname) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *HashicorpWaypointHostname) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *HashicorpWaypointHostname) UnmarshalBinary(b []byte) error {
	var res HashicorpWaypointHostname
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
