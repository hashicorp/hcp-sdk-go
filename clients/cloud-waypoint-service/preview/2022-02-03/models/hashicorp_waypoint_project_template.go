// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// HashicorpWaypointProjectTemplate hashicorp waypoint project template
//
// swagger:model hashicorp.waypoint.ProjectTemplate
type HashicorpWaypointProjectTemplate struct {

	// A long summary of what the ProjectTemplate is to be used for. This summary
	// is shared between platform engineers and application developers.
	ExpandedSummary string `json:"expanded_summary,omitempty"`

	// Unique ID of the ProjectTemplate
	ID string `json:"id,omitempty"`

	// Unique name of the ProjectTemplate
	Name string `json:"name,omitempty"`

	// A markdown text template which is rendered when a Project is created from a
	// ProjectTemplate to be shown to application developers.
	// Accepted tokens:
	// "{{ .ProjectName }}", representing the application developer chosen project name
	// "{{ .TfcOrgName }}", representing the Terraform Cloud organization name in which
	//  the no-code module was reified
	// Format: byte
	ReadmeMarkdownTemplate strfmt.Base64 `json:"readme_markdown_template,omitempty"`

	// A brief summary for use by platform engineers to distinguish between
	// multiple templates
	Summary string `json:"summary,omitempty"`

	// A list of descriptive strings that can be applied to the ProjectTemplate.
	Tags []string `json:"tags"`

	// The information on meta data on the Terraform Cloud workspace that was
	// created when this project was created from a template.
	TerraformCloudWorkspaceDetails *HashicorpWaypointProjectTemplateTerraformCloudWorkspaceDetails `json:"terraform_cloud_workspace_details,omitempty"`

	// The Terraform No-Code Module which should be used to provision
	// infrastructure that is used by the project created from a ProjectTemplate.
	TerraformNocodeModule *HashicorpWaypointProjectTemplateTerraformNocodeModule `json:"terraform_nocode_module,omitempty"`

	// Settings for the Waypoint project that should be set when a project is
	// created from a ProjectTemplate.
	WaypointProject *HashicorpWaypointProjectTemplateWaypointProject `json:"waypoint_project,omitempty"`
}

// Validate validates this hashicorp waypoint project template
func (m *HashicorpWaypointProjectTemplate) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateTerraformCloudWorkspaceDetails(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateTerraformNocodeModule(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateWaypointProject(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *HashicorpWaypointProjectTemplate) validateTerraformCloudWorkspaceDetails(formats strfmt.Registry) error {
	if swag.IsZero(m.TerraformCloudWorkspaceDetails) { // not required
		return nil
	}

	if m.TerraformCloudWorkspaceDetails != nil {
		if err := m.TerraformCloudWorkspaceDetails.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("terraform_cloud_workspace_details")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("terraform_cloud_workspace_details")
			}
			return err
		}
	}

	return nil
}

func (m *HashicorpWaypointProjectTemplate) validateTerraformNocodeModule(formats strfmt.Registry) error {
	if swag.IsZero(m.TerraformNocodeModule) { // not required
		return nil
	}

	if m.TerraformNocodeModule != nil {
		if err := m.TerraformNocodeModule.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("terraform_nocode_module")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("terraform_nocode_module")
			}
			return err
		}
	}

	return nil
}

func (m *HashicorpWaypointProjectTemplate) validateWaypointProject(formats strfmt.Registry) error {
	if swag.IsZero(m.WaypointProject) { // not required
		return nil
	}

	if m.WaypointProject != nil {
		if err := m.WaypointProject.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("waypoint_project")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("waypoint_project")
			}
			return err
		}
	}

	return nil
}

// ContextValidate validate this hashicorp waypoint project template based on the context it is used
func (m *HashicorpWaypointProjectTemplate) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := m.contextValidateTerraformCloudWorkspaceDetails(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := m.contextValidateTerraformNocodeModule(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := m.contextValidateWaypointProject(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *HashicorpWaypointProjectTemplate) contextValidateTerraformCloudWorkspaceDetails(ctx context.Context, formats strfmt.Registry) error {

	if m.TerraformCloudWorkspaceDetails != nil {

		if swag.IsZero(m.TerraformCloudWorkspaceDetails) { // not required
			return nil
		}

		if err := m.TerraformCloudWorkspaceDetails.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("terraform_cloud_workspace_details")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("terraform_cloud_workspace_details")
			}
			return err
		}
	}

	return nil
}

func (m *HashicorpWaypointProjectTemplate) contextValidateTerraformNocodeModule(ctx context.Context, formats strfmt.Registry) error {

	if m.TerraformNocodeModule != nil {

		if swag.IsZero(m.TerraformNocodeModule) { // not required
			return nil
		}

		if err := m.TerraformNocodeModule.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("terraform_nocode_module")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("terraform_nocode_module")
			}
			return err
		}
	}

	return nil
}

func (m *HashicorpWaypointProjectTemplate) contextValidateWaypointProject(ctx context.Context, formats strfmt.Registry) error {

	if m.WaypointProject != nil {

		if swag.IsZero(m.WaypointProject) { // not required
			return nil
		}

		if err := m.WaypointProject.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("waypoint_project")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("waypoint_project")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *HashicorpWaypointProjectTemplate) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *HashicorpWaypointProjectTemplate) UnmarshalBinary(b []byte) error {
	var res HashicorpWaypointProjectTemplate
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
