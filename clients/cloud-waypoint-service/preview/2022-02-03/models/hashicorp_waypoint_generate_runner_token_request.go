// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// HashicorpWaypointGenerateRunnerTokenRequest hashicorp waypoint generate runner token request
//
// swagger:model hashicorp.waypoint.GenerateRunnerTokenRequest
type HashicorpWaypointGenerateRunnerTokenRequest struct {

	// How long the token should be valid from the time the request
	// is made. If this is empty then the runner token never expires on its own.
	Duration string `json:"duration,omitempty"`

	// ID to restrict this token to work with. This can be empty to allow it
	// for all runner IDs.
	ID string `json:"id,omitempty"`

	// The set of labels to restrict this runner token to work for. The runner
	// labels must match this label set exactly. If this is not set, then runners
	// with any labels may use the resulting token.
	Labels map[string]string `json:"labels,omitempty"`
}

// Validate validates this hashicorp waypoint generate runner token request
func (m *HashicorpWaypointGenerateRunnerTokenRequest) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this hashicorp waypoint generate runner token request based on context it is used
func (m *HashicorpWaypointGenerateRunnerTokenRequest) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *HashicorpWaypointGenerateRunnerTokenRequest) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *HashicorpWaypointGenerateRunnerTokenRequest) UnmarshalBinary(b []byte) error {
	var res HashicorpWaypointGenerateRunnerTokenRequest
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
