// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// HashicorpWaypointRunnerJobStreamRequestRequest hashicorp waypoint runner job stream request request
//
// swagger:model hashicorp.waypoint.RunnerJobStreamRequest.Request
type HashicorpWaypointRunnerJobStreamRequestRequest struct {

	// If the runner is reconnecting to a dropped connection, it can specify
	// the job ID it is continuing. This can only be specified when the runner
	// is reconnecting to a dropped connection due to network issues or
	// the server process disappearing. This can't currently be safely used
	// for reconnecting after a runner crash, because that case hasn't been
	// thought of yet.
	ReattachJobID string `json:"reattach_job_id,omitempty"`

	// The ID of the runner opening the job stream. This ID must match
	// the ID of the runner token in use.
	RunnerID string `json:"runner_id,omitempty"`
}

// Validate validates this hashicorp waypoint runner job stream request request
func (m *HashicorpWaypointRunnerJobStreamRequestRequest) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this hashicorp waypoint runner job stream request request based on context it is used
func (m *HashicorpWaypointRunnerJobStreamRequestRequest) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *HashicorpWaypointRunnerJobStreamRequestRequest) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *HashicorpWaypointRunnerJobStreamRequestRequest) UnmarshalBinary(b []byte) error {
	var res HashicorpWaypointRunnerJobStreamRequestRequest
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
