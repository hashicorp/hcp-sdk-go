// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// HashicorpWaypointCreateAddOnDefinitionRequest CreateAddOnDefinitionRequest is the request used to create an Add-on
// definition
//
// swagger:model hashicorp.waypoint.CreateAddOnDefinitionRequest
type HashicorpWaypointCreateAddOnDefinitionRequest struct {

	// Longer description of the Add-on
	LongSummary string `json:"long_summary,omitempty"`

	// Name of the Add-on definition
	Name string `json:"name,omitempty"`

	// A templated README describing the Add-on
	// Format: byte
	ReadmeMarkdownTemplate strfmt.Base64 `json:"readme_markdown_template,omitempty"`

	// Short description of the Add-on
	ShortSummary string `json:"short_summary,omitempty"`

	// A list of descriptive tags for an Add-on
	Tags []string `json:"tags"`

	// Terraform No Code module used for provisioning the Add-on
	TerraformNocodeModule *HashicorpWaypointTerraformNocodeModule `json:"terraform_nocode_module,omitempty"`

	// The TF variable set to apply to the Add-on's No Code workspace
	TfVariableSetIds []string `json:"tf_variable_set_ids"`
}

// Validate validates this hashicorp waypoint create add on definition request
func (m *HashicorpWaypointCreateAddOnDefinitionRequest) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateTerraformNocodeModule(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *HashicorpWaypointCreateAddOnDefinitionRequest) validateTerraformNocodeModule(formats strfmt.Registry) error {
	if swag.IsZero(m.TerraformNocodeModule) { // not required
		return nil
	}

	if m.TerraformNocodeModule != nil {
		if err := m.TerraformNocodeModule.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("terraform_nocode_module")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("terraform_nocode_module")
			}
			return err
		}
	}

	return nil
}

// ContextValidate validate this hashicorp waypoint create add on definition request based on the context it is used
func (m *HashicorpWaypointCreateAddOnDefinitionRequest) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := m.contextValidateTerraformNocodeModule(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *HashicorpWaypointCreateAddOnDefinitionRequest) contextValidateTerraformNocodeModule(ctx context.Context, formats strfmt.Registry) error {

	if m.TerraformNocodeModule != nil {

		if swag.IsZero(m.TerraformNocodeModule) { // not required
			return nil
		}

		if err := m.TerraformNocodeModule.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("terraform_nocode_module")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("terraform_nocode_module")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *HashicorpWaypointCreateAddOnDefinitionRequest) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *HashicorpWaypointCreateAddOnDefinitionRequest) UnmarshalBinary(b []byte) error {
	var res HashicorpWaypointCreateAddOnDefinitionRequest
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
