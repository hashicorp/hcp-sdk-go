// Code generated by go-swagger; DO NOT EDIT.

package waypoint_service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewWaypointServiceGetApplicationTemplate2Params creates a new WaypointServiceGetApplicationTemplate2Params object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewWaypointServiceGetApplicationTemplate2Params() *WaypointServiceGetApplicationTemplate2Params {
	return &WaypointServiceGetApplicationTemplate2Params{
		timeout: cr.DefaultTimeout,
	}
}

// NewWaypointServiceGetApplicationTemplate2ParamsWithTimeout creates a new WaypointServiceGetApplicationTemplate2Params object
// with the ability to set a timeout on a request.
func NewWaypointServiceGetApplicationTemplate2ParamsWithTimeout(timeout time.Duration) *WaypointServiceGetApplicationTemplate2Params {
	return &WaypointServiceGetApplicationTemplate2Params{
		timeout: timeout,
	}
}

// NewWaypointServiceGetApplicationTemplate2ParamsWithContext creates a new WaypointServiceGetApplicationTemplate2Params object
// with the ability to set a context for a request.
func NewWaypointServiceGetApplicationTemplate2ParamsWithContext(ctx context.Context) *WaypointServiceGetApplicationTemplate2Params {
	return &WaypointServiceGetApplicationTemplate2Params{
		Context: ctx,
	}
}

// NewWaypointServiceGetApplicationTemplate2ParamsWithHTTPClient creates a new WaypointServiceGetApplicationTemplate2Params object
// with the ability to set a custom HTTPClient for a request.
func NewWaypointServiceGetApplicationTemplate2ParamsWithHTTPClient(client *http.Client) *WaypointServiceGetApplicationTemplate2Params {
	return &WaypointServiceGetApplicationTemplate2Params{
		HTTPClient: client,
	}
}

/*
WaypointServiceGetApplicationTemplate2Params contains all the parameters to send to the API endpoint

	for the waypoint service get application template2 operation.

	Typically these are written to a http.Request.
*/
type WaypointServiceGetApplicationTemplate2Params struct {

	/* ApplicationTemplateID.

	   ID of the ApplicationTemplate.
	*/
	ApplicationTemplateID *string

	/* ApplicationTemplateName.

	   Name of the ApplicationTemplate
	*/
	ApplicationTemplateName string

	// NamespaceID.
	NamespaceID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the waypoint service get application template2 params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *WaypointServiceGetApplicationTemplate2Params) WithDefaults() *WaypointServiceGetApplicationTemplate2Params {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the waypoint service get application template2 params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *WaypointServiceGetApplicationTemplate2Params) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the waypoint service get application template2 params
func (o *WaypointServiceGetApplicationTemplate2Params) WithTimeout(timeout time.Duration) *WaypointServiceGetApplicationTemplate2Params {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the waypoint service get application template2 params
func (o *WaypointServiceGetApplicationTemplate2Params) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the waypoint service get application template2 params
func (o *WaypointServiceGetApplicationTemplate2Params) WithContext(ctx context.Context) *WaypointServiceGetApplicationTemplate2Params {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the waypoint service get application template2 params
func (o *WaypointServiceGetApplicationTemplate2Params) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the waypoint service get application template2 params
func (o *WaypointServiceGetApplicationTemplate2Params) WithHTTPClient(client *http.Client) *WaypointServiceGetApplicationTemplate2Params {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the waypoint service get application template2 params
func (o *WaypointServiceGetApplicationTemplate2Params) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithApplicationTemplateID adds the applicationTemplateID to the waypoint service get application template2 params
func (o *WaypointServiceGetApplicationTemplate2Params) WithApplicationTemplateID(applicationTemplateID *string) *WaypointServiceGetApplicationTemplate2Params {
	o.SetApplicationTemplateID(applicationTemplateID)
	return o
}

// SetApplicationTemplateID adds the applicationTemplateId to the waypoint service get application template2 params
func (o *WaypointServiceGetApplicationTemplate2Params) SetApplicationTemplateID(applicationTemplateID *string) {
	o.ApplicationTemplateID = applicationTemplateID
}

// WithApplicationTemplateName adds the applicationTemplateName to the waypoint service get application template2 params
func (o *WaypointServiceGetApplicationTemplate2Params) WithApplicationTemplateName(applicationTemplateName string) *WaypointServiceGetApplicationTemplate2Params {
	o.SetApplicationTemplateName(applicationTemplateName)
	return o
}

// SetApplicationTemplateName adds the applicationTemplateName to the waypoint service get application template2 params
func (o *WaypointServiceGetApplicationTemplate2Params) SetApplicationTemplateName(applicationTemplateName string) {
	o.ApplicationTemplateName = applicationTemplateName
}

// WithNamespaceID adds the namespaceID to the waypoint service get application template2 params
func (o *WaypointServiceGetApplicationTemplate2Params) WithNamespaceID(namespaceID string) *WaypointServiceGetApplicationTemplate2Params {
	o.SetNamespaceID(namespaceID)
	return o
}

// SetNamespaceID adds the namespaceId to the waypoint service get application template2 params
func (o *WaypointServiceGetApplicationTemplate2Params) SetNamespaceID(namespaceID string) {
	o.NamespaceID = namespaceID
}

// WriteToRequest writes these params to a swagger request
func (o *WaypointServiceGetApplicationTemplate2Params) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.ApplicationTemplateID != nil {

		// query param application_template.id
		var qrApplicationTemplateID string

		if o.ApplicationTemplateID != nil {
			qrApplicationTemplateID = *o.ApplicationTemplateID
		}
		qApplicationTemplateID := qrApplicationTemplateID
		if qApplicationTemplateID != "" {

			if err := r.SetQueryParam("application_template.id", qApplicationTemplateID); err != nil {
				return err
			}
		}
	}

	// path param application_template.name
	if err := r.SetPathParam("application_template.name", o.ApplicationTemplateName); err != nil {
		return err
	}

	// path param namespace.id
	if err := r.SetPathParam("namespace.id", o.NamespaceID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
