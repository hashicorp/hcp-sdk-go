// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// HashicorpCloudWaypointV20241122UILoadProductBannerResponse hashicorp cloud waypoint v20241122 UI load product banner response
//
// swagger:model hashicorp.cloud.waypoint.v20241122.UI.LoadProductBannerResponse
type HashicorpCloudWaypointV20241122UILoadProductBannerResponse struct {

	// actions grace period
	ActionsGracePeriod bool `json:"actions_grace_period,omitempty"`

	// has actions
	HasActions bool `json:"has_actions,omitempty"`

	// has templates and addons
	HasTemplatesAndAddons bool `json:"has_templates_and_addons,omitempty"`

	// product has activated
	ProductHasActivated bool `json:"product_has_activated,omitempty"`

	// product valid
	ProductValid bool `json:"product_valid,omitempty"`

	// tfc org permissions
	TfcOrgPermissions []string `json:"tfc_org_permissions"`

	// token expired
	TokenExpired bool `json:"token_expired,omitempty"`
}

// Validate validates this hashicorp cloud waypoint v20241122 UI load product banner response
func (m *HashicorpCloudWaypointV20241122UILoadProductBannerResponse) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this hashicorp cloud waypoint v20241122 UI load product banner response based on context it is used
func (m *HashicorpCloudWaypointV20241122UILoadProductBannerResponse) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *HashicorpCloudWaypointV20241122UILoadProductBannerResponse) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *HashicorpCloudWaypointV20241122UILoadProductBannerResponse) UnmarshalBinary(b []byte) error {
	var res HashicorpCloudWaypointV20241122UILoadProductBannerResponse
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
