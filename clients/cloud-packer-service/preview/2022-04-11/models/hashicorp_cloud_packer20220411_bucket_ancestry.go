// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// HashicorpCloudPacker20220411BucketAncestry The ancestral relation between two buckets composed by a parent and a
// child.
//
// swagger:model hashicorp.cloud.packer_20220411.BucketAncestry
type HashicorpCloudPacker20220411BucketAncestry struct {

	// The child bucket and the iteration that relates to the parent.
	Child *HashicorpCloudPacker20220411BucketAncestryChild `json:"child,omitempty"`

	// The parent bucket and the iteration that relates to the child.
	Parent *HashicorpCloudPacker20220411BucketAncestryParent `json:"parent,omitempty"`

	// The status of the relation between the parent and child buckets.
	Status HashicorpCloudPacker20220411BucketAncestryStatus `json:"status,omitempty"`
}

// Validate validates this hashicorp cloud packer 20220411 bucket ancestry
func (m *HashicorpCloudPacker20220411BucketAncestry) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateChild(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateParent(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateStatus(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *HashicorpCloudPacker20220411BucketAncestry) validateChild(formats strfmt.Registry) error {

	if swag.IsZero(m.Child) { // not required
		return nil
	}

	if m.Child != nil {
		if err := m.Child.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("child")
			}
			return err
		}
	}

	return nil
}

func (m *HashicorpCloudPacker20220411BucketAncestry) validateParent(formats strfmt.Registry) error {

	if swag.IsZero(m.Parent) { // not required
		return nil
	}

	if m.Parent != nil {
		if err := m.Parent.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("parent")
			}
			return err
		}
	}

	return nil
}

func (m *HashicorpCloudPacker20220411BucketAncestry) validateStatus(formats strfmt.Registry) error {

	if swag.IsZero(m.Status) { // not required
		return nil
	}

	if err := m.Status.Validate(formats); err != nil {
		if ve, ok := err.(*errors.Validation); ok {
			return ve.ValidateName("status")
		}
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *HashicorpCloudPacker20220411BucketAncestry) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *HashicorpCloudPacker20220411BucketAncestry) UnmarshalBinary(b []byte) error {
	var res HashicorpCloudPacker20220411BucketAncestry
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
