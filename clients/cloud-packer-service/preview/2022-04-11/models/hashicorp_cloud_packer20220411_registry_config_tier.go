// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// HashicorpCloudPacker20220411RegistryConfigTier hashicorp cloud packer 20220411 registry config tier
//
// swagger:model hashicorp.cloud.packer_20220411.RegistryConfig.Tier
type HashicorpCloudPacker20220411RegistryConfigTier string

func NewHashicorpCloudPacker20220411RegistryConfigTier(value HashicorpCloudPacker20220411RegistryConfigTier) *HashicorpCloudPacker20220411RegistryConfigTier {
	return &value
}

// Pointer returns a pointer to a freshly-allocated HashicorpCloudPacker20220411RegistryConfigTier.
func (m HashicorpCloudPacker20220411RegistryConfigTier) Pointer() *HashicorpCloudPacker20220411RegistryConfigTier {
	return &m
}

const (

	// HashicorpCloudPacker20220411RegistryConfigTierUNSET captures enum value "UNSET"
	HashicorpCloudPacker20220411RegistryConfigTierUNSET HashicorpCloudPacker20220411RegistryConfigTier = "UNSET"

	// HashicorpCloudPacker20220411RegistryConfigTierPRIVATEBETA captures enum value "PRIVATE_BETA"
	HashicorpCloudPacker20220411RegistryConfigTierPRIVATEBETA HashicorpCloudPacker20220411RegistryConfigTier = "PRIVATE_BETA"

	// HashicorpCloudPacker20220411RegistryConfigTierSTANDARD captures enum value "STANDARD"
	HashicorpCloudPacker20220411RegistryConfigTierSTANDARD HashicorpCloudPacker20220411RegistryConfigTier = "STANDARD"

	// HashicorpCloudPacker20220411RegistryConfigTierPLUS captures enum value "PLUS"
	HashicorpCloudPacker20220411RegistryConfigTierPLUS HashicorpCloudPacker20220411RegistryConfigTier = "PLUS"
)

// for schema
var hashicorpCloudPacker20220411RegistryConfigTierEnum []interface{}

func init() {
	var res []HashicorpCloudPacker20220411RegistryConfigTier
	if err := json.Unmarshal([]byte(`["UNSET","PRIVATE_BETA","STANDARD","PLUS"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		hashicorpCloudPacker20220411RegistryConfigTierEnum = append(hashicorpCloudPacker20220411RegistryConfigTierEnum, v)
	}
}

func (m HashicorpCloudPacker20220411RegistryConfigTier) validateHashicorpCloudPacker20220411RegistryConfigTierEnum(path, location string, value HashicorpCloudPacker20220411RegistryConfigTier) error {
	if err := validate.EnumCase(path, location, value, hashicorpCloudPacker20220411RegistryConfigTierEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this hashicorp cloud packer 20220411 registry config tier
func (m HashicorpCloudPacker20220411RegistryConfigTier) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateHashicorpCloudPacker20220411RegistryConfigTierEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this hashicorp cloud packer 20220411 registry config tier based on context it is used
func (m HashicorpCloudPacker20220411RegistryConfigTier) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
