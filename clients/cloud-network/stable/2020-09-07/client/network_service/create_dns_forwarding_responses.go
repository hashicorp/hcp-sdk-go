// Code generated by go-swagger; DO NOT EDIT.

package network_service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/hashicorp/hcp-sdk-go/clients/cloud-network/stable/2020-09-07/models"
	cloud "github.com/hashicorp/hcp-sdk-go/clients/cloud-shared/v1/models"
)

// CreateDNSForwardingReader is a Reader for the CreateDNSForwarding structure.
type CreateDNSForwardingReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateDNSForwardingReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewCreateDNSForwardingOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewCreateDNSForwardingDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewCreateDNSForwardingOK creates a CreateDNSForwardingOK with default headers values
func NewCreateDNSForwardingOK() *CreateDNSForwardingOK {
	return &CreateDNSForwardingOK{}
}

/*
CreateDNSForwardingOK describes a response with status code 200, with default header values.

A successful response.
*/
type CreateDNSForwardingOK struct {
	Payload *models.HashicorpCloudNetwork20200907CreateDNSForwardingResponse
}

// IsSuccess returns true when this create Dns forwarding o k response has a 2xx status code
func (o *CreateDNSForwardingOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this create Dns forwarding o k response has a 3xx status code
func (o *CreateDNSForwardingOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create Dns forwarding o k response has a 4xx status code
func (o *CreateDNSForwardingOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this create Dns forwarding o k response has a 5xx status code
func (o *CreateDNSForwardingOK) IsServerError() bool {
	return false
}

// IsCode returns true when this create Dns forwarding o k response a status code equal to that given
func (o *CreateDNSForwardingOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the create Dns forwarding o k response
func (o *CreateDNSForwardingOK) Code() int {
	return 200
}

func (o *CreateDNSForwardingOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /network/2020-09-07/organizations/{dns_forwarding.hvn.location.organization_id}/projects/{dns_forwarding.hvn.location.project_id}/networks/{dns_forwarding.hvn.id}/dnsforwardings][%d] createDnsForwardingOK %s", 200, payload)
}

func (o *CreateDNSForwardingOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /network/2020-09-07/organizations/{dns_forwarding.hvn.location.organization_id}/projects/{dns_forwarding.hvn.location.project_id}/networks/{dns_forwarding.hvn.id}/dnsforwardings][%d] createDnsForwardingOK %s", 200, payload)
}

func (o *CreateDNSForwardingOK) GetPayload() *models.HashicorpCloudNetwork20200907CreateDNSForwardingResponse {
	return o.Payload
}

func (o *CreateDNSForwardingOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HashicorpCloudNetwork20200907CreateDNSForwardingResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateDNSForwardingDefault creates a CreateDNSForwardingDefault with default headers values
func NewCreateDNSForwardingDefault(code int) *CreateDNSForwardingDefault {
	return &CreateDNSForwardingDefault{
		_statusCode: code,
	}
}

/*
CreateDNSForwardingDefault describes a response with status code -1, with default header values.

An unexpected error response.
*/
type CreateDNSForwardingDefault struct {
	_statusCode int

	Payload *cloud.GrpcGatewayRuntimeError
}

// IsSuccess returns true when this create DNS forwarding default response has a 2xx status code
func (o *CreateDNSForwardingDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this create DNS forwarding default response has a 3xx status code
func (o *CreateDNSForwardingDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this create DNS forwarding default response has a 4xx status code
func (o *CreateDNSForwardingDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this create DNS forwarding default response has a 5xx status code
func (o *CreateDNSForwardingDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this create DNS forwarding default response a status code equal to that given
func (o *CreateDNSForwardingDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the create DNS forwarding default response
func (o *CreateDNSForwardingDefault) Code() int {
	return o._statusCode
}

func (o *CreateDNSForwardingDefault) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /network/2020-09-07/organizations/{dns_forwarding.hvn.location.organization_id}/projects/{dns_forwarding.hvn.location.project_id}/networks/{dns_forwarding.hvn.id}/dnsforwardings][%d] CreateDNSForwarding default %s", o._statusCode, payload)
}

func (o *CreateDNSForwardingDefault) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /network/2020-09-07/organizations/{dns_forwarding.hvn.location.organization_id}/projects/{dns_forwarding.hvn.location.project_id}/networks/{dns_forwarding.hvn.id}/dnsforwardings][%d] CreateDNSForwarding default %s", o._statusCode, payload)
}

func (o *CreateDNSForwardingDefault) GetPayload() *cloud.GrpcGatewayRuntimeError {
	return o.Payload
}

func (o *CreateDNSForwardingDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(cloud.GrpcGatewayRuntimeError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
