// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// HashicorpCloudVault20201125LinkedClusterNodeState hashicorp cloud vault 20201125 linked cluster node state
//
// swagger:model hashicorp.cloud.vault_20201125.LinkedClusterNode.State
type HashicorpCloudVault20201125LinkedClusterNodeState string

func NewHashicorpCloudVault20201125LinkedClusterNodeState(value HashicorpCloudVault20201125LinkedClusterNodeState) *HashicorpCloudVault20201125LinkedClusterNodeState {
	return &value
}

// Pointer returns a pointer to a freshly-allocated HashicorpCloudVault20201125LinkedClusterNodeState.
func (m HashicorpCloudVault20201125LinkedClusterNodeState) Pointer() *HashicorpCloudVault20201125LinkedClusterNodeState {
	return &m
}

const (

	// HashicorpCloudVault20201125LinkedClusterNodeStateLINKEDCLUSTERSTATEINVALID captures enum value "LINKED_CLUSTER_STATE_INVALID"
	HashicorpCloudVault20201125LinkedClusterNodeStateLINKEDCLUSTERSTATEINVALID HashicorpCloudVault20201125LinkedClusterNodeState = "LINKED_CLUSTER_STATE_INVALID"

	// HashicorpCloudVault20201125LinkedClusterNodeStateLINKING captures enum value "LINKING"
	HashicorpCloudVault20201125LinkedClusterNodeStateLINKING HashicorpCloudVault20201125LinkedClusterNodeState = "LINKING"

	// HashicorpCloudVault20201125LinkedClusterNodeStateLINKED captures enum value "LINKED"
	HashicorpCloudVault20201125LinkedClusterNodeStateLINKED HashicorpCloudVault20201125LinkedClusterNodeState = "LINKED"

	// HashicorpCloudVault20201125LinkedClusterNodeStateUNLINKING captures enum value "UNLINKING"
	HashicorpCloudVault20201125LinkedClusterNodeStateUNLINKING HashicorpCloudVault20201125LinkedClusterNodeState = "UNLINKING"

	// HashicorpCloudVault20201125LinkedClusterNodeStateUNLINKED captures enum value "UNLINKED"
	HashicorpCloudVault20201125LinkedClusterNodeStateUNLINKED HashicorpCloudVault20201125LinkedClusterNodeState = "UNLINKED"
)

// for schema
var hashicorpCloudVault20201125LinkedClusterNodeStateEnum []interface{}

func init() {
	var res []HashicorpCloudVault20201125LinkedClusterNodeState
	if err := json.Unmarshal([]byte(`["LINKED_CLUSTER_STATE_INVALID","LINKING","LINKED","UNLINKING","UNLINKED"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		hashicorpCloudVault20201125LinkedClusterNodeStateEnum = append(hashicorpCloudVault20201125LinkedClusterNodeStateEnum, v)
	}
}

func (m HashicorpCloudVault20201125LinkedClusterNodeState) validateHashicorpCloudVault20201125LinkedClusterNodeStateEnum(path, location string, value HashicorpCloudVault20201125LinkedClusterNodeState) error {
	if err := validate.EnumCase(path, location, value, hashicorpCloudVault20201125LinkedClusterNodeStateEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this hashicorp cloud vault 20201125 linked cluster node state
func (m HashicorpCloudVault20201125LinkedClusterNodeState) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateHashicorpCloudVault20201125LinkedClusterNodeStateEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this hashicorp cloud vault 20201125 linked cluster node state based on context it is used
func (m HashicorpCloudVault20201125LinkedClusterNodeState) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
