// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// HashicorpCloudVault20201125LinkedClusterState hashicorp cloud vault 20201125 linked cluster state
//
// swagger:model hashicorp.cloud.vault_20201125.LinkedCluster.State
type HashicorpCloudVault20201125LinkedClusterState string

func NewHashicorpCloudVault20201125LinkedClusterState(value HashicorpCloudVault20201125LinkedClusterState) *HashicorpCloudVault20201125LinkedClusterState {
	return &value
}

// Pointer returns a pointer to a freshly-allocated HashicorpCloudVault20201125LinkedClusterState.
func (m HashicorpCloudVault20201125LinkedClusterState) Pointer() *HashicorpCloudVault20201125LinkedClusterState {
	return &m
}

const (

	// HashicorpCloudVault20201125LinkedClusterStateLINKEDCLUSTERSTATEINVALID captures enum value "LINKED_CLUSTER_STATE_INVALID"
	HashicorpCloudVault20201125LinkedClusterStateLINKEDCLUSTERSTATEINVALID HashicorpCloudVault20201125LinkedClusterState = "LINKED_CLUSTER_STATE_INVALID"

	// HashicorpCloudVault20201125LinkedClusterStateLINKING captures enum value "LINKING"
	HashicorpCloudVault20201125LinkedClusterStateLINKING HashicorpCloudVault20201125LinkedClusterState = "LINKING"

	// HashicorpCloudVault20201125LinkedClusterStateLINKED captures enum value "LINKED"
	HashicorpCloudVault20201125LinkedClusterStateLINKED HashicorpCloudVault20201125LinkedClusterState = "LINKED"

	// HashicorpCloudVault20201125LinkedClusterStateUNLINKING captures enum value "UNLINKING"
	HashicorpCloudVault20201125LinkedClusterStateUNLINKING HashicorpCloudVault20201125LinkedClusterState = "UNLINKING"

	// HashicorpCloudVault20201125LinkedClusterStateUNLINKED captures enum value "UNLINKED"
	HashicorpCloudVault20201125LinkedClusterStateUNLINKED HashicorpCloudVault20201125LinkedClusterState = "UNLINKED"
)

// for schema
var hashicorpCloudVault20201125LinkedClusterStateEnum []interface{}

func init() {
	var res []HashicorpCloudVault20201125LinkedClusterState
	if err := json.Unmarshal([]byte(`["LINKED_CLUSTER_STATE_INVALID","LINKING","LINKED","UNLINKING","UNLINKED"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		hashicorpCloudVault20201125LinkedClusterStateEnum = append(hashicorpCloudVault20201125LinkedClusterStateEnum, v)
	}
}

func (m HashicorpCloudVault20201125LinkedClusterState) validateHashicorpCloudVault20201125LinkedClusterStateEnum(path, location string, value HashicorpCloudVault20201125LinkedClusterState) error {
	if err := validate.EnumCase(path, location, value, hashicorpCloudVault20201125LinkedClusterStateEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this hashicorp cloud vault 20201125 linked cluster state
func (m HashicorpCloudVault20201125LinkedClusterState) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateHashicorpCloudVault20201125LinkedClusterStateEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this hashicorp cloud vault 20201125 linked cluster state based on context it is used
func (m HashicorpCloudVault20201125LinkedClusterState) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
