// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// HashicorpCloudVault20200420SnapshotType Type represents the type of snapshots.
//
// swagger:model hashicorp.cloud.vault_20200420.Snapshot.Type
type HashicorpCloudVault20200420SnapshotType string

func NewHashicorpCloudVault20200420SnapshotType(value HashicorpCloudVault20200420SnapshotType) *HashicorpCloudVault20200420SnapshotType {
	return &value
}

// Pointer returns a pointer to a freshly-allocated HashicorpCloudVault20200420SnapshotType.
func (m HashicorpCloudVault20200420SnapshotType) Pointer() *HashicorpCloudVault20200420SnapshotType {
	return &m
}

const (

	// HashicorpCloudVault20200420SnapshotTypeTYPEUNSET captures enum value "TYPE_UNSET"
	HashicorpCloudVault20200420SnapshotTypeTYPEUNSET HashicorpCloudVault20200420SnapshotType = "TYPE_UNSET"

	// HashicorpCloudVault20200420SnapshotTypeAUTOMATIC captures enum value "AUTOMATIC"
	HashicorpCloudVault20200420SnapshotTypeAUTOMATIC HashicorpCloudVault20200420SnapshotType = "AUTOMATIC"

	// HashicorpCloudVault20200420SnapshotTypeSCHEDULED captures enum value "SCHEDULED"
	HashicorpCloudVault20200420SnapshotTypeSCHEDULED HashicorpCloudVault20200420SnapshotType = "SCHEDULED"

	// HashicorpCloudVault20200420SnapshotTypeMANUAL captures enum value "MANUAL"
	HashicorpCloudVault20200420SnapshotTypeMANUAL HashicorpCloudVault20200420SnapshotType = "MANUAL"

	// HashicorpCloudVault20200420SnapshotTypeBEFOREUPGRADE captures enum value "BEFORE_UPGRADE"
	HashicorpCloudVault20200420SnapshotTypeBEFOREUPGRADE HashicorpCloudVault20200420SnapshotType = "BEFORE_UPGRADE"
)

// for schema
var hashicorpCloudVault20200420SnapshotTypeEnum []interface{}

func init() {
	var res []HashicorpCloudVault20200420SnapshotType
	if err := json.Unmarshal([]byte(`["TYPE_UNSET","AUTOMATIC","SCHEDULED","MANUAL","BEFORE_UPGRADE"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		hashicorpCloudVault20200420SnapshotTypeEnum = append(hashicorpCloudVault20200420SnapshotTypeEnum, v)
	}
}

func (m HashicorpCloudVault20200420SnapshotType) validateHashicorpCloudVault20200420SnapshotTypeEnum(path, location string, value HashicorpCloudVault20200420SnapshotType) error {
	if err := validate.EnumCase(path, location, value, hashicorpCloudVault20200420SnapshotTypeEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this hashicorp cloud vault 20200420 snapshot type
func (m HashicorpCloudVault20200420SnapshotType) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateHashicorpCloudVault20200420SnapshotTypeEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this hashicorp cloud vault 20200420 snapshot type based on context it is used
func (m HashicorpCloudVault20200420SnapshotType) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
