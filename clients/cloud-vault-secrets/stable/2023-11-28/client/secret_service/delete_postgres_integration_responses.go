// Code generated by go-swagger; DO NOT EDIT.

package secret_service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/hashicorp/hcp-sdk-go/clients/cloud-vault-secrets/stable/2023-11-28/models"
)

// DeletePostgresIntegrationReader is a Reader for the DeletePostgresIntegration structure.
type DeletePostgresIntegrationReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeletePostgresIntegrationReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDeletePostgresIntegrationOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewDeletePostgresIntegrationDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewDeletePostgresIntegrationOK creates a DeletePostgresIntegrationOK with default headers values
func NewDeletePostgresIntegrationOK() *DeletePostgresIntegrationOK {
	return &DeletePostgresIntegrationOK{}
}

/*
DeletePostgresIntegrationOK describes a response with status code 200, with default header values.

A successful response.
*/
type DeletePostgresIntegrationOK struct {
	Payload models.Secrets20231128DeletePostgresIntegrationResponse
}

// IsSuccess returns true when this delete postgres integration o k response has a 2xx status code
func (o *DeletePostgresIntegrationOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this delete postgres integration o k response has a 3xx status code
func (o *DeletePostgresIntegrationOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete postgres integration o k response has a 4xx status code
func (o *DeletePostgresIntegrationOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete postgres integration o k response has a 5xx status code
func (o *DeletePostgresIntegrationOK) IsServerError() bool {
	return false
}

// IsCode returns true when this delete postgres integration o k response a status code equal to that given
func (o *DeletePostgresIntegrationOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the delete postgres integration o k response
func (o *DeletePostgresIntegrationOK) Code() int {
	return 200
}

func (o *DeletePostgresIntegrationOK) Error() string {
	return fmt.Sprintf("[DELETE /secrets/2023-11-28/organizations/{organization_id}/projects/{project_id}/integrations/postgres/config/{name}][%d] deletePostgresIntegrationOK  %+v", 200, o.Payload)
}

func (o *DeletePostgresIntegrationOK) String() string {
	return fmt.Sprintf("[DELETE /secrets/2023-11-28/organizations/{organization_id}/projects/{project_id}/integrations/postgres/config/{name}][%d] deletePostgresIntegrationOK  %+v", 200, o.Payload)
}

func (o *DeletePostgresIntegrationOK) GetPayload() models.Secrets20231128DeletePostgresIntegrationResponse {
	return o.Payload
}

func (o *DeletePostgresIntegrationOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeletePostgresIntegrationDefault creates a DeletePostgresIntegrationDefault with default headers values
func NewDeletePostgresIntegrationDefault(code int) *DeletePostgresIntegrationDefault {
	return &DeletePostgresIntegrationDefault{
		_statusCode: code,
	}
}

/*
DeletePostgresIntegrationDefault describes a response with status code -1, with default header values.

An unexpected error response.
*/
type DeletePostgresIntegrationDefault struct {
	_statusCode int

	Payload *models.GooglerpcStatus
}

// IsSuccess returns true when this delete postgres integration default response has a 2xx status code
func (o *DeletePostgresIntegrationDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this delete postgres integration default response has a 3xx status code
func (o *DeletePostgresIntegrationDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this delete postgres integration default response has a 4xx status code
func (o *DeletePostgresIntegrationDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this delete postgres integration default response has a 5xx status code
func (o *DeletePostgresIntegrationDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this delete postgres integration default response a status code equal to that given
func (o *DeletePostgresIntegrationDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the delete postgres integration default response
func (o *DeletePostgresIntegrationDefault) Code() int {
	return o._statusCode
}

func (o *DeletePostgresIntegrationDefault) Error() string {
	return fmt.Sprintf("[DELETE /secrets/2023-11-28/organizations/{organization_id}/projects/{project_id}/integrations/postgres/config/{name}][%d] DeletePostgresIntegration default  %+v", o._statusCode, o.Payload)
}

func (o *DeletePostgresIntegrationDefault) String() string {
	return fmt.Sprintf("[DELETE /secrets/2023-11-28/organizations/{organization_id}/projects/{project_id}/integrations/postgres/config/{name}][%d] DeletePostgresIntegration default  %+v", o._statusCode, o.Payload)
}

func (o *DeletePostgresIntegrationDefault) GetPayload() *models.GooglerpcStatus {
	return o.Payload
}

func (o *DeletePostgresIntegrationDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GooglerpcStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
