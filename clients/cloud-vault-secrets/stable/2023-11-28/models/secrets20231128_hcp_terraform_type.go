// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// Secrets20231128HcpTerraformType secrets 20231128 hcp terraform type
//
// swagger:model secrets_20231128HcpTerraformType
type Secrets20231128HcpTerraformType string

func NewSecrets20231128HcpTerraformType(value Secrets20231128HcpTerraformType) *Secrets20231128HcpTerraformType {
	return &value
}

// Pointer returns a pointer to a freshly-allocated Secrets20231128HcpTerraformType.
func (m Secrets20231128HcpTerraformType) Pointer() *Secrets20231128HcpTerraformType {
	return &m
}

const (

	// Secrets20231128HcpTerraformTypeWORKSPACE captures enum value "WORKSPACE"
	Secrets20231128HcpTerraformTypeWORKSPACE Secrets20231128HcpTerraformType = "WORKSPACE"

	// Secrets20231128HcpTerraformTypeVARIABLESET captures enum value "VARIABLE_SET"
	Secrets20231128HcpTerraformTypeVARIABLESET Secrets20231128HcpTerraformType = "VARIABLE_SET"
)

// for schema
var secrets20231128HcpTerraformTypeEnum []interface{}

func init() {
	var res []Secrets20231128HcpTerraformType
	if err := json.Unmarshal([]byte(`["WORKSPACE","VARIABLE_SET"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		secrets20231128HcpTerraformTypeEnum = append(secrets20231128HcpTerraformTypeEnum, v)
	}
}

func (m Secrets20231128HcpTerraformType) validateSecrets20231128HcpTerraformTypeEnum(path, location string, value Secrets20231128HcpTerraformType) error {
	if err := validate.EnumCase(path, location, value, secrets20231128HcpTerraformTypeEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this secrets 20231128 hcp terraform type
func (m Secrets20231128HcpTerraformType) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateSecrets20231128HcpTerraformTypeEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this secrets 20231128 hcp terraform type based on context it is used
func (m Secrets20231128HcpTerraformType) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
