// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// Secrets20231128RotatingSecretStatus secrets 20231128 rotating secret status
//
// swagger:model secrets_20231128RotatingSecretStatus
type Secrets20231128RotatingSecretStatus string

func NewSecrets20231128RotatingSecretStatus(value Secrets20231128RotatingSecretStatus) *Secrets20231128RotatingSecretStatus {
	return &value
}

// Pointer returns a pointer to a freshly-allocated Secrets20231128RotatingSecretStatus.
func (m Secrets20231128RotatingSecretStatus) Pointer() *Secrets20231128RotatingSecretStatus {
	return &m
}

const (

	// Secrets20231128RotatingSecretStatusNONE captures enum value "NONE"
	Secrets20231128RotatingSecretStatusNONE Secrets20231128RotatingSecretStatus = "NONE"

	// Secrets20231128RotatingSecretStatusERRORED captures enum value "ERRORED"
	Secrets20231128RotatingSecretStatusERRORED Secrets20231128RotatingSecretStatus = "ERRORED"

	// Secrets20231128RotatingSecretStatusWAITINGFORNEXTROTATION captures enum value "WAITING_FOR_NEXT_ROTATION"
	Secrets20231128RotatingSecretStatusWAITINGFORNEXTROTATION Secrets20231128RotatingSecretStatus = "WAITING_FOR_NEXT_ROTATION"

	// Secrets20231128RotatingSecretStatusROTATIONSTARTING captures enum value "ROTATION_STARTING"
	Secrets20231128RotatingSecretStatusROTATIONSTARTING Secrets20231128RotatingSecretStatus = "ROTATION_STARTING"

	// Secrets20231128RotatingSecretStatusROTATIONSTAGINGCREDENTIAL captures enum value "ROTATION_STAGING_CREDENTIAL"
	Secrets20231128RotatingSecretStatusROTATIONSTAGINGCREDENTIAL Secrets20231128RotatingSecretStatus = "ROTATION_STAGING_CREDENTIAL"

	// Secrets20231128RotatingSecretStatusROTATIONCREATINGCREDENTIAL captures enum value "ROTATION_CREATING_CREDENTIAL"
	Secrets20231128RotatingSecretStatusROTATIONCREATINGCREDENTIAL Secrets20231128RotatingSecretStatus = "ROTATION_CREATING_CREDENTIAL"

	// Secrets20231128RotatingSecretStatusROTATIONTESTINGCREDENTIAL captures enum value "ROTATION_TESTING_CREDENTIAL"
	Secrets20231128RotatingSecretStatusROTATIONTESTINGCREDENTIAL Secrets20231128RotatingSecretStatus = "ROTATION_TESTING_CREDENTIAL"

	// Secrets20231128RotatingSecretStatusROTATIONSTORINGCREDENTIAL captures enum value "ROTATION_STORING_CREDENTIAL"
	Secrets20231128RotatingSecretStatusROTATIONSTORINGCREDENTIAL Secrets20231128RotatingSecretStatus = "ROTATION_STORING_CREDENTIAL"

	// Secrets20231128RotatingSecretStatusROTATIONCHECKINGREVOCABLE captures enum value "ROTATION_CHECKING_REVOCABLE"
	Secrets20231128RotatingSecretStatusROTATIONCHECKINGREVOCABLE Secrets20231128RotatingSecretStatus = "ROTATION_CHECKING_REVOCABLE"

	// Secrets20231128RotatingSecretStatusROTATIONREVOKINGCREDENTIAL captures enum value "ROTATION_REVOKING_CREDENTIAL"
	Secrets20231128RotatingSecretStatusROTATIONREVOKINGCREDENTIAL Secrets20231128RotatingSecretStatus = "ROTATION_REVOKING_CREDENTIAL"

	// Secrets20231128RotatingSecretStatusROTATIONMARKINGREVOKED captures enum value "ROTATION_MARKING_REVOKED"
	Secrets20231128RotatingSecretStatusROTATIONMARKINGREVOKED Secrets20231128RotatingSecretStatus = "ROTATION_MARKING_REVOKED"
)

// for schema
var secrets20231128RotatingSecretStatusEnum []interface{}

func init() {
	var res []Secrets20231128RotatingSecretStatus
	if err := json.Unmarshal([]byte(`["NONE","ERRORED","WAITING_FOR_NEXT_ROTATION","ROTATION_STARTING","ROTATION_STAGING_CREDENTIAL","ROTATION_CREATING_CREDENTIAL","ROTATION_TESTING_CREDENTIAL","ROTATION_STORING_CREDENTIAL","ROTATION_CHECKING_REVOCABLE","ROTATION_REVOKING_CREDENTIAL","ROTATION_MARKING_REVOKED"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		secrets20231128RotatingSecretStatusEnum = append(secrets20231128RotatingSecretStatusEnum, v)
	}
}

func (m Secrets20231128RotatingSecretStatus) validateSecrets20231128RotatingSecretStatusEnum(path, location string, value Secrets20231128RotatingSecretStatus) error {
	if err := validate.EnumCase(path, location, value, secrets20231128RotatingSecretStatusEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this secrets 20231128 rotating secret status
func (m Secrets20231128RotatingSecretStatus) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateSecrets20231128RotatingSecretStatusEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this secrets 20231128 rotating secret status based on context it is used
func (m Secrets20231128RotatingSecretStatus) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
