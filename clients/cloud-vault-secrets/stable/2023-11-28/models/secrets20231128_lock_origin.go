// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// Secrets20231128LockOrigin secrets 20231128 lock origin
//
// swagger:model secrets_20231128LockOrigin
type Secrets20231128LockOrigin string

func NewSecrets20231128LockOrigin(value Secrets20231128LockOrigin) *Secrets20231128LockOrigin {
	return &value
}

// Pointer returns a pointer to a freshly-allocated Secrets20231128LockOrigin.
func (m Secrets20231128LockOrigin) Pointer() *Secrets20231128LockOrigin {
	return &m
}

const (

	// Secrets20231128LockOriginUNKNOWNORIGIN captures enum value "UNKNOWN_ORIGIN"
	Secrets20231128LockOriginUNKNOWNORIGIN Secrets20231128LockOrigin = "UNKNOWN_ORIGIN"

	// Secrets20231128LockOriginCUSTOMER captures enum value "CUSTOMER"
	Secrets20231128LockOriginCUSTOMER Secrets20231128LockOrigin = "CUSTOMER"

	// Secrets20231128LockOriginBILLING captures enum value "BILLING"
	Secrets20231128LockOriginBILLING Secrets20231128LockOrigin = "BILLING"
)

// for schema
var secrets20231128LockOriginEnum []interface{}

func init() {
	var res []Secrets20231128LockOrigin
	if err := json.Unmarshal([]byte(`["UNKNOWN_ORIGIN","CUSTOMER","BILLING"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		secrets20231128LockOriginEnum = append(secrets20231128LockOriginEnum, v)
	}
}

func (m Secrets20231128LockOrigin) validateSecrets20231128LockOriginEnum(path, location string, value Secrets20231128LockOrigin) error {
	if err := validate.EnumCase(path, location, value, secrets20231128LockOriginEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this secrets 20231128 lock origin
func (m Secrets20231128LockOrigin) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateSecrets20231128LockOriginEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this secrets 20231128 lock origin based on context it is used
func (m Secrets20231128LockOrigin) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
