// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// ListAppSecretsRequestSecretType list app secrets request secret type
//
// swagger:model ListAppSecretsRequestSecretType
type ListAppSecretsRequestSecretType string

func NewListAppSecretsRequestSecretType(value ListAppSecretsRequestSecretType) *ListAppSecretsRequestSecretType {
	return &value
}

// Pointer returns a pointer to a freshly-allocated ListAppSecretsRequestSecretType.
func (m ListAppSecretsRequestSecretType) Pointer() *ListAppSecretsRequestSecretType {
	return &m
}

const (

	// ListAppSecretsRequestSecretTypeKV captures enum value "KV"
	ListAppSecretsRequestSecretTypeKV ListAppSecretsRequestSecretType = "KV"

	// ListAppSecretsRequestSecretTypeROTATING captures enum value "ROTATING"
	ListAppSecretsRequestSecretTypeROTATING ListAppSecretsRequestSecretType = "ROTATING"

	// ListAppSecretsRequestSecretTypeDYNAMIC captures enum value "DYNAMIC"
	ListAppSecretsRequestSecretTypeDYNAMIC ListAppSecretsRequestSecretType = "DYNAMIC"
)

// for schema
var listAppSecretsRequestSecretTypeEnum []interface{}

func init() {
	var res []ListAppSecretsRequestSecretType
	if err := json.Unmarshal([]byte(`["KV","ROTATING","DYNAMIC"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		listAppSecretsRequestSecretTypeEnum = append(listAppSecretsRequestSecretTypeEnum, v)
	}
}

func (m ListAppSecretsRequestSecretType) validateListAppSecretsRequestSecretTypeEnum(path, location string, value ListAppSecretsRequestSecretType) error {
	if err := validate.EnumCase(path, location, value, listAppSecretsRequestSecretTypeEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this list app secrets request secret type
func (m ListAppSecretsRequestSecretType) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateListAppSecretsRequestSecretTypeEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this list app secrets request secret type based on context it is used
func (m ListAppSecretsRequestSecretType) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
