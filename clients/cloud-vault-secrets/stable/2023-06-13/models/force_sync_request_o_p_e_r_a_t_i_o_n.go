// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// ForceSyncRequestOPERATION force sync request o p e r a t i o n
//
// swagger:model ForceSyncRequestOPERATION
type ForceSyncRequestOPERATION string

func NewForceSyncRequestOPERATION(value ForceSyncRequestOPERATION) *ForceSyncRequestOPERATION {
	return &value
}

// Pointer returns a pointer to a freshly-allocated ForceSyncRequestOPERATION.
func (m ForceSyncRequestOPERATION) Pointer() *ForceSyncRequestOPERATION {
	return &m
}

const (

	// ForceSyncRequestOPERATIONUPLOAD captures enum value "UPLOAD"
	ForceSyncRequestOPERATIONUPLOAD ForceSyncRequestOPERATION = "UPLOAD"

	// ForceSyncRequestOPERATIONPURGE captures enum value "PURGE"
	ForceSyncRequestOPERATIONPURGE ForceSyncRequestOPERATION = "PURGE"
)

// for schema
var forceSyncRequestOPERATIONEnum []interface{}

func init() {
	var res []ForceSyncRequestOPERATION
	if err := json.Unmarshal([]byte(`["UPLOAD","PURGE"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		forceSyncRequestOPERATIONEnum = append(forceSyncRequestOPERATIONEnum, v)
	}
}

func (m ForceSyncRequestOPERATION) validateForceSyncRequestOPERATIONEnum(path, location string, value ForceSyncRequestOPERATION) error {
	if err := validate.EnumCase(path, location, value, forceSyncRequestOPERATIONEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this force sync request o p e r a t i o n
func (m ForceSyncRequestOPERATION) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateForceSyncRequestOPERATIONEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this force sync request o p e r a t i o n based on context it is used
func (m ForceSyncRequestOPERATION) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
