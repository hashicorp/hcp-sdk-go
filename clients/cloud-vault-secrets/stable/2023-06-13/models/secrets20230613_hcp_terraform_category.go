// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// Secrets20230613HcpTerraformCategory secrets 20230613 hcp terraform category
//
// swagger:model secrets_20230613HcpTerraformCategory
type Secrets20230613HcpTerraformCategory string

func NewSecrets20230613HcpTerraformCategory(value Secrets20230613HcpTerraformCategory) *Secrets20230613HcpTerraformCategory {
	return &value
}

// Pointer returns a pointer to a freshly-allocated Secrets20230613HcpTerraformCategory.
func (m Secrets20230613HcpTerraformCategory) Pointer() *Secrets20230613HcpTerraformCategory {
	return &m
}

const (

	// Secrets20230613HcpTerraformCategoryTERRAFORM captures enum value "TERRAFORM"
	Secrets20230613HcpTerraformCategoryTERRAFORM Secrets20230613HcpTerraformCategory = "TERRAFORM"

	// Secrets20230613HcpTerraformCategoryENV captures enum value "ENV"
	Secrets20230613HcpTerraformCategoryENV Secrets20230613HcpTerraformCategory = "ENV"
)

// for schema
var secrets20230613HcpTerraformCategoryEnum []interface{}

func init() {
	var res []Secrets20230613HcpTerraformCategory
	if err := json.Unmarshal([]byte(`["TERRAFORM","ENV"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		secrets20230613HcpTerraformCategoryEnum = append(secrets20230613HcpTerraformCategoryEnum, v)
	}
}

func (m Secrets20230613HcpTerraformCategory) validateSecrets20230613HcpTerraformCategoryEnum(path, location string, value Secrets20230613HcpTerraformCategory) error {
	if err := validate.EnumCase(path, location, value, secrets20230613HcpTerraformCategoryEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this secrets 20230613 hcp terraform category
func (m Secrets20230613HcpTerraformCategory) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateSecrets20230613HcpTerraformCategoryEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this secrets 20230613 hcp terraform category based on context it is used
func (m Secrets20230613HcpTerraformCategory) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
