// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// Secrets20231128SyncConfigGitlab secrets 20231128 sync config gitlab
//
// swagger:model secrets_20231128SyncConfigGitlab
type Secrets20231128SyncConfigGitlab struct {

	// destination
	Destination string `json:"destination,omitempty"`

	// environment scope
	EnvironmentScope string `json:"environment_scope,omitempty"`

	// group id
	GroupID string `json:"group_id,omitempty"`

	// project id
	ProjectID string `json:"project_id,omitempty"`

	// protected
	Protected bool `json:"protected,omitempty"`

	// raw
	Raw bool `json:"raw,omitempty"`
}

// Validate validates this secrets 20231128 sync config gitlab
func (m *Secrets20231128SyncConfigGitlab) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this secrets 20231128 sync config gitlab based on context it is used
func (m *Secrets20231128SyncConfigGitlab) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *Secrets20231128SyncConfigGitlab) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *Secrets20231128SyncConfigGitlab) UnmarshalBinary(b []byte) error {
	var res Secrets20231128SyncConfigGitlab
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
