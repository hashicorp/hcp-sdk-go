// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// SecretServiceCreateTwilioIntegrationBody secret service create twilio integration body
//
// swagger:model SecretServiceCreateTwilioIntegrationBody
type SecretServiceCreateTwilioIntegrationBody struct {

	// capabilities
	Capabilities []*Secrets20231128Capability `json:"capabilities"`

	// gateway pool id
	GatewayPoolID string `json:"gateway_pool_id,omitempty"`

	// integration name
	IntegrationName string `json:"integration_name,omitempty"`

	// name
	Name string `json:"name,omitempty"`

	// static credential details
	StaticCredentialDetails *Secrets20231128TwilioStaticCredentialsRequest `json:"static_credential_details,omitempty"`

	// twilio account sid
	TwilioAccountSid string `json:"twilio_account_sid,omitempty"`

	// twilio api key secret
	TwilioAPIKeySecret string `json:"twilio_api_key_secret,omitempty"`

	// twilio api key sid
	TwilioAPIKeySid string `json:"twilio_api_key_sid,omitempty"`
}

// Validate validates this secret service create twilio integration body
func (m *SecretServiceCreateTwilioIntegrationBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateCapabilities(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateStaticCredentialDetails(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *SecretServiceCreateTwilioIntegrationBody) validateCapabilities(formats strfmt.Registry) error {
	if swag.IsZero(m.Capabilities) { // not required
		return nil
	}

	for i := 0; i < len(m.Capabilities); i++ {
		if swag.IsZero(m.Capabilities[i]) { // not required
			continue
		}

		if m.Capabilities[i] != nil {
			if err := m.Capabilities[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("capabilities" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("capabilities" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (m *SecretServiceCreateTwilioIntegrationBody) validateStaticCredentialDetails(formats strfmt.Registry) error {
	if swag.IsZero(m.StaticCredentialDetails) { // not required
		return nil
	}

	if m.StaticCredentialDetails != nil {
		if err := m.StaticCredentialDetails.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("static_credential_details")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("static_credential_details")
			}
			return err
		}
	}

	return nil
}

// ContextValidate validate this secret service create twilio integration body based on the context it is used
func (m *SecretServiceCreateTwilioIntegrationBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := m.contextValidateCapabilities(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := m.contextValidateStaticCredentialDetails(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *SecretServiceCreateTwilioIntegrationBody) contextValidateCapabilities(ctx context.Context, formats strfmt.Registry) error {

	for i := 0; i < len(m.Capabilities); i++ {

		if m.Capabilities[i] != nil {

			if swag.IsZero(m.Capabilities[i]) { // not required
				return nil
			}

			if err := m.Capabilities[i].ContextValidate(ctx, formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("capabilities" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("capabilities" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (m *SecretServiceCreateTwilioIntegrationBody) contextValidateStaticCredentialDetails(ctx context.Context, formats strfmt.Registry) error {

	if m.StaticCredentialDetails != nil {

		if swag.IsZero(m.StaticCredentialDetails) { // not required
			return nil
		}

		if err := m.StaticCredentialDetails.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("static_credential_details")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("static_credential_details")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *SecretServiceCreateTwilioIntegrationBody) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *SecretServiceCreateTwilioIntegrationBody) UnmarshalBinary(b []byte) error {
	var res SecretServiceCreateTwilioIntegrationBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
