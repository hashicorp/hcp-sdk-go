// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// HashicorpCloudConsul20210204VersionStatus  - AVAILABLE: AVAILABLE represents a version that is generally available
// but no longer the preferred/recommended version.
//   - RECOMMENDED: RECOMMENDED represents a version that is generally available
//
// and recommended by HashiCorp.
//   - PREVIEW: PREVIEW represents a version that is not generally available.
//
// swagger:model hashicorp.cloud.consul_20210204.Version.Status
type HashicorpCloudConsul20210204VersionStatus string

func NewHashicorpCloudConsul20210204VersionStatus(value HashicorpCloudConsul20210204VersionStatus) *HashicorpCloudConsul20210204VersionStatus {
	return &value
}

// Pointer returns a pointer to a freshly-allocated HashicorpCloudConsul20210204VersionStatus.
func (m HashicorpCloudConsul20210204VersionStatus) Pointer() *HashicorpCloudConsul20210204VersionStatus {
	return &m
}

const (

	// HashicorpCloudConsul20210204VersionStatusAVAILABLE captures enum value "AVAILABLE"
	HashicorpCloudConsul20210204VersionStatusAVAILABLE HashicorpCloudConsul20210204VersionStatus = "AVAILABLE"

	// HashicorpCloudConsul20210204VersionStatusRECOMMENDED captures enum value "RECOMMENDED"
	HashicorpCloudConsul20210204VersionStatusRECOMMENDED HashicorpCloudConsul20210204VersionStatus = "RECOMMENDED"

	// HashicorpCloudConsul20210204VersionStatusPREVIEW captures enum value "PREVIEW"
	HashicorpCloudConsul20210204VersionStatusPREVIEW HashicorpCloudConsul20210204VersionStatus = "PREVIEW"
)

// for schema
var hashicorpCloudConsul20210204VersionStatusEnum []interface{}

func init() {
	var res []HashicorpCloudConsul20210204VersionStatus
	if err := json.Unmarshal([]byte(`["AVAILABLE","RECOMMENDED","PREVIEW"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		hashicorpCloudConsul20210204VersionStatusEnum = append(hashicorpCloudConsul20210204VersionStatusEnum, v)
	}
}

func (m HashicorpCloudConsul20210204VersionStatus) validateHashicorpCloudConsul20210204VersionStatusEnum(path, location string, value HashicorpCloudConsul20210204VersionStatus) error {
	if err := validate.EnumCase(path, location, value, hashicorpCloudConsul20210204VersionStatusEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this hashicorp cloud consul 20210204 version status
func (m HashicorpCloudConsul20210204VersionStatus) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateHashicorpCloudConsul20210204VersionStatusEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this hashicorp cloud consul 20210204 version status based on context it is used
func (m HashicorpCloudConsul20210204VersionStatus) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
