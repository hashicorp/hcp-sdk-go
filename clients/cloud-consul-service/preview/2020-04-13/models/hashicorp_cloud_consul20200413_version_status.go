// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// HashicorpCloudConsul20200413VersionStatus  - AVAILABLE: AVAILABLE represents a version that is generally available
// but no longer the preferred/recommended version.
//  - RECOMMENDED: RECOMMENDED represents a version that is generally available
// and recommended by HashiCorp.
//  - PREVIEW: PREVIEW represents a version that is not generally available.
//
// swagger:model hashicorp.cloud.consul_20200413.Version.Status
type HashicorpCloudConsul20200413VersionStatus string

func NewHashicorpCloudConsul20200413VersionStatus(value HashicorpCloudConsul20200413VersionStatus) *HashicorpCloudConsul20200413VersionStatus {
	v := value
	return &v
}

const (

	// HashicorpCloudConsul20200413VersionStatusAVAILABLE captures enum value "AVAILABLE"
	HashicorpCloudConsul20200413VersionStatusAVAILABLE HashicorpCloudConsul20200413VersionStatus = "AVAILABLE"

	// HashicorpCloudConsul20200413VersionStatusRECOMMENDED captures enum value "RECOMMENDED"
	HashicorpCloudConsul20200413VersionStatusRECOMMENDED HashicorpCloudConsul20200413VersionStatus = "RECOMMENDED"

	// HashicorpCloudConsul20200413VersionStatusPREVIEW captures enum value "PREVIEW"
	HashicorpCloudConsul20200413VersionStatusPREVIEW HashicorpCloudConsul20200413VersionStatus = "PREVIEW"
)

// for schema
var hashicorpCloudConsul20200413VersionStatusEnum []interface{}

func init() {
	var res []HashicorpCloudConsul20200413VersionStatus
	if err := json.Unmarshal([]byte(`["AVAILABLE","RECOMMENDED","PREVIEW"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		hashicorpCloudConsul20200413VersionStatusEnum = append(hashicorpCloudConsul20200413VersionStatusEnum, v)
	}
}

func (m HashicorpCloudConsul20200413VersionStatus) validateHashicorpCloudConsul20200413VersionStatusEnum(path, location string, value HashicorpCloudConsul20200413VersionStatus) error {
	if err := validate.EnumCase(path, location, value, hashicorpCloudConsul20200413VersionStatusEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this hashicorp cloud consul 20200413 version status
func (m HashicorpCloudConsul20200413VersionStatus) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateHashicorpCloudConsul20200413VersionStatusEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this hashicorp cloud consul 20200413 version status based on context it is used
func (m HashicorpCloudConsul20200413VersionStatus) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
