// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// HashicorpCloudGlobalNetworkManager20220215ListClustersRequestType Type limits responses to the specified cluster type
//
// - TYPE_UNSPECIFIED: unspecified type to filter on. If this error appears, default to self-managed clusters
//   - TYPE_ALL: all cluster types
//   - TYPE_SELF: self-managed clusters
//   - TYPE_HCP: HCP-managed clusters
//
// swagger:model hashicorp.cloud.global_network_manager_20220215.ListClustersRequest.Type
type HashicorpCloudGlobalNetworkManager20220215ListClustersRequestType string

func NewHashicorpCloudGlobalNetworkManager20220215ListClustersRequestType(value HashicorpCloudGlobalNetworkManager20220215ListClustersRequestType) *HashicorpCloudGlobalNetworkManager20220215ListClustersRequestType {
	return &value
}

// Pointer returns a pointer to a freshly-allocated HashicorpCloudGlobalNetworkManager20220215ListClustersRequestType.
func (m HashicorpCloudGlobalNetworkManager20220215ListClustersRequestType) Pointer() *HashicorpCloudGlobalNetworkManager20220215ListClustersRequestType {
	return &m
}

const (

	// HashicorpCloudGlobalNetworkManager20220215ListClustersRequestTypeTYPEUNSPECIFIED captures enum value "TYPE_UNSPECIFIED"
	HashicorpCloudGlobalNetworkManager20220215ListClustersRequestTypeTYPEUNSPECIFIED HashicorpCloudGlobalNetworkManager20220215ListClustersRequestType = "TYPE_UNSPECIFIED"

	// HashicorpCloudGlobalNetworkManager20220215ListClustersRequestTypeTYPEALL captures enum value "TYPE_ALL"
	HashicorpCloudGlobalNetworkManager20220215ListClustersRequestTypeTYPEALL HashicorpCloudGlobalNetworkManager20220215ListClustersRequestType = "TYPE_ALL"

	// HashicorpCloudGlobalNetworkManager20220215ListClustersRequestTypeTYPESELF captures enum value "TYPE_SELF"
	HashicorpCloudGlobalNetworkManager20220215ListClustersRequestTypeTYPESELF HashicorpCloudGlobalNetworkManager20220215ListClustersRequestType = "TYPE_SELF"

	// HashicorpCloudGlobalNetworkManager20220215ListClustersRequestTypeTYPEHCP captures enum value "TYPE_HCP"
	HashicorpCloudGlobalNetworkManager20220215ListClustersRequestTypeTYPEHCP HashicorpCloudGlobalNetworkManager20220215ListClustersRequestType = "TYPE_HCP"
)

// for schema
var hashicorpCloudGlobalNetworkManager20220215ListClustersRequestTypeEnum []interface{}

func init() {
	var res []HashicorpCloudGlobalNetworkManager20220215ListClustersRequestType
	if err := json.Unmarshal([]byte(`["TYPE_UNSPECIFIED","TYPE_ALL","TYPE_SELF","TYPE_HCP"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		hashicorpCloudGlobalNetworkManager20220215ListClustersRequestTypeEnum = append(hashicorpCloudGlobalNetworkManager20220215ListClustersRequestTypeEnum, v)
	}
}

func (m HashicorpCloudGlobalNetworkManager20220215ListClustersRequestType) validateHashicorpCloudGlobalNetworkManager20220215ListClustersRequestTypeEnum(path, location string, value HashicorpCloudGlobalNetworkManager20220215ListClustersRequestType) error {
	if err := validate.EnumCase(path, location, value, hashicorpCloudGlobalNetworkManager20220215ListClustersRequestTypeEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this hashicorp cloud global network manager 20220215 list clusters request type
func (m HashicorpCloudGlobalNetworkManager20220215ListClustersRequestType) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateHashicorpCloudGlobalNetworkManager20220215ListClustersRequestTypeEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this hashicorp cloud global network manager 20220215 list clusters request type based on context it is used
func (m HashicorpCloudGlobalNetworkManager20220215ListClustersRequestType) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
