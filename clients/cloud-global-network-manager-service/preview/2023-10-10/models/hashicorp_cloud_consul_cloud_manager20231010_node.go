// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// HashicorpCloudConsulCloudManager20231010Node hashicorp cloud consul cloud manager 20231010 node
//
// swagger:model hashicorp.cloud.consul_cloud_manager_20231010.Node
type HashicorpCloudConsulCloudManager20231010Node struct {

	// IP address of the node
	Address string `json:"address,omitempty"`

	// Name of the cluster to which the node belongs
	ClusterName string `json:"cluster_name,omitempty"`

	// ID of the node
	ID string `json:"id,omitempty"`

	// Mame of the node
	Name string `json:"name,omitempty"`

	// `resource_id` of the cluster to which the node belongs
	ParentResourceID string `json:"parent_resource_id,omitempty"`

	// Resource name of the cluster to which the node belongs
	ParentResourceName string `json:"parent_resource_name,omitempty"`

	// Partition of the node
	Partition string `json:"partition,omitempty"`

	// Tagged address of the node
	TaggedAddresses map[string]string `json:"tagged_addresses,omitempty"`
}

// Validate validates this hashicorp cloud consul cloud manager 20231010 node
func (m *HashicorpCloudConsulCloudManager20231010Node) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this hashicorp cloud consul cloud manager 20231010 node based on context it is used
func (m *HashicorpCloudConsulCloudManager20231010Node) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *HashicorpCloudConsulCloudManager20231010Node) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *HashicorpCloudConsulCloudManager20231010Node) UnmarshalBinary(b []byte) error {
	var res HashicorpCloudConsulCloudManager20231010Node
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
