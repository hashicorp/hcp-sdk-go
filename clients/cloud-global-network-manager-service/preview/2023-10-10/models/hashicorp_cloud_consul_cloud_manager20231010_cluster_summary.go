// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// HashicorpCloudConsulCloudManager20231010ClusterSummary hashicorp cloud consul cloud manager 20231010 cluster summary
//
// swagger:model hashicorp.cloud.consul_cloud_manager_20231010.ClusterSummary
type HashicorpCloudConsulCloudManager20231010ClusterSummary struct {

	// client count
	ClientCount int32 `json:"client_count,omitempty"`

	// node count
	NodeCount int32 `json:"node_count,omitempty"`

	// server count
	ServerCount int32 `json:"server_count,omitempty"`

	// service count
	ServiceCount int32 `json:"service_count,omitempty"`

	// service critical
	ServiceCritical int32 `json:"service_critical,omitempty"`

	// service passing
	ServicePassing int32 `json:"service_passing,omitempty"`

	// service warning
	ServiceWarning int32 `json:"service_warning,omitempty"`
}

// Validate validates this hashicorp cloud consul cloud manager 20231010 cluster summary
func (m *HashicorpCloudConsulCloudManager20231010ClusterSummary) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this hashicorp cloud consul cloud manager 20231010 cluster summary based on context it is used
func (m *HashicorpCloudConsulCloudManager20231010ClusterSummary) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *HashicorpCloudConsulCloudManager20231010ClusterSummary) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *HashicorpCloudConsulCloudManager20231010ClusterSummary) UnmarshalBinary(b []byte) error {
	var res HashicorpCloudConsulCloudManager20231010ClusterSummary
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
