// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// HashicorpCloudVagrant20220930DownloadProviderResponse hashicorp cloud vagrant 20220930 download provider response
//
// swagger:model hashicorp.cloud.vagrant_20220930.DownloadProviderResponse
type HashicorpCloudVagrant20220930DownloadProviderResponse struct {

	// (Optional) checksum data to validate the download with. This field may
	// not be populated for Hosted Provider downloads.
	Checksum string `json:"checksum,omitempty"`

	// The algorithm type for the provided checksum.
	ChecksumType HashicorpCloudVagrant20220930DownloadProviderResponseChecksumType `json:"checksum_type,omitempty"`

	// The URL to download the Provider data from.
	URL string `json:"url,omitempty"`
}

// Validate validates this hashicorp cloud vagrant 20220930 download provider response
func (m *HashicorpCloudVagrant20220930DownloadProviderResponse) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateChecksumType(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *HashicorpCloudVagrant20220930DownloadProviderResponse) validateChecksumType(formats strfmt.Registry) error {

	if swag.IsZero(m.ChecksumType) { // not required
		return nil
	}

	if err := m.ChecksumType.Validate(formats); err != nil {
		if ve, ok := err.(*errors.Validation); ok {
			return ve.ValidateName("checksum_type")
		}
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *HashicorpCloudVagrant20220930DownloadProviderResponse) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *HashicorpCloudVagrant20220930DownloadProviderResponse) UnmarshalBinary(b []byte) error {
	var res HashicorpCloudVagrant20220930DownloadProviderResponse
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
