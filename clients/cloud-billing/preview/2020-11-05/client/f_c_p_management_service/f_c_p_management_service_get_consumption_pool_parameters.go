// Code generated by go-swagger; DO NOT EDIT.

package f_c_p_management_service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewFCPManagementServiceGetConsumptionPoolParams creates a new FCPManagementServiceGetConsumptionPoolParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewFCPManagementServiceGetConsumptionPoolParams() *FCPManagementServiceGetConsumptionPoolParams {
	return &FCPManagementServiceGetConsumptionPoolParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewFCPManagementServiceGetConsumptionPoolParamsWithTimeout creates a new FCPManagementServiceGetConsumptionPoolParams object
// with the ability to set a timeout on a request.
func NewFCPManagementServiceGetConsumptionPoolParamsWithTimeout(timeout time.Duration) *FCPManagementServiceGetConsumptionPoolParams {
	return &FCPManagementServiceGetConsumptionPoolParams{
		timeout: timeout,
	}
}

// NewFCPManagementServiceGetConsumptionPoolParamsWithContext creates a new FCPManagementServiceGetConsumptionPoolParams object
// with the ability to set a context for a request.
func NewFCPManagementServiceGetConsumptionPoolParamsWithContext(ctx context.Context) *FCPManagementServiceGetConsumptionPoolParams {
	return &FCPManagementServiceGetConsumptionPoolParams{
		Context: ctx,
	}
}

// NewFCPManagementServiceGetConsumptionPoolParamsWithHTTPClient creates a new FCPManagementServiceGetConsumptionPoolParams object
// with the ability to set a custom HTTPClient for a request.
func NewFCPManagementServiceGetConsumptionPoolParamsWithHTTPClient(client *http.Client) *FCPManagementServiceGetConsumptionPoolParams {
	return &FCPManagementServiceGetConsumptionPoolParams{
		HTTPClient: client,
	}
}

/*
FCPManagementServiceGetConsumptionPoolParams contains all the parameters to send to the API endpoint

	for the f c p management service get consumption pool operation.

	Typically these are written to a http.Request.
*/
type FCPManagementServiceGetConsumptionPoolParams struct {

	/* BillingAccountID.

	   billing_account_id is the billing account to fetch consumption pools for.
	*/
	BillingAccountID string

	/* ConsumptionPoolID.

	   consumption_pool_id is the id of the specific consumption pool to return
	*/
	ConsumptionPoolID string

	/* OrganizationID.

	   organization_id is the organization where the billing account belongs to.
	*/
	OrganizationID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the f c p management service get consumption pool params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *FCPManagementServiceGetConsumptionPoolParams) WithDefaults() *FCPManagementServiceGetConsumptionPoolParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the f c p management service get consumption pool params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *FCPManagementServiceGetConsumptionPoolParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the f c p management service get consumption pool params
func (o *FCPManagementServiceGetConsumptionPoolParams) WithTimeout(timeout time.Duration) *FCPManagementServiceGetConsumptionPoolParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the f c p management service get consumption pool params
func (o *FCPManagementServiceGetConsumptionPoolParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the f c p management service get consumption pool params
func (o *FCPManagementServiceGetConsumptionPoolParams) WithContext(ctx context.Context) *FCPManagementServiceGetConsumptionPoolParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the f c p management service get consumption pool params
func (o *FCPManagementServiceGetConsumptionPoolParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the f c p management service get consumption pool params
func (o *FCPManagementServiceGetConsumptionPoolParams) WithHTTPClient(client *http.Client) *FCPManagementServiceGetConsumptionPoolParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the f c p management service get consumption pool params
func (o *FCPManagementServiceGetConsumptionPoolParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithBillingAccountID adds the billingAccountID to the f c p management service get consumption pool params
func (o *FCPManagementServiceGetConsumptionPoolParams) WithBillingAccountID(billingAccountID string) *FCPManagementServiceGetConsumptionPoolParams {
	o.SetBillingAccountID(billingAccountID)
	return o
}

// SetBillingAccountID adds the billingAccountId to the f c p management service get consumption pool params
func (o *FCPManagementServiceGetConsumptionPoolParams) SetBillingAccountID(billingAccountID string) {
	o.BillingAccountID = billingAccountID
}

// WithConsumptionPoolID adds the consumptionPoolID to the f c p management service get consumption pool params
func (o *FCPManagementServiceGetConsumptionPoolParams) WithConsumptionPoolID(consumptionPoolID string) *FCPManagementServiceGetConsumptionPoolParams {
	o.SetConsumptionPoolID(consumptionPoolID)
	return o
}

// SetConsumptionPoolID adds the consumptionPoolId to the f c p management service get consumption pool params
func (o *FCPManagementServiceGetConsumptionPoolParams) SetConsumptionPoolID(consumptionPoolID string) {
	o.ConsumptionPoolID = consumptionPoolID
}

// WithOrganizationID adds the organizationID to the f c p management service get consumption pool params
func (o *FCPManagementServiceGetConsumptionPoolParams) WithOrganizationID(organizationID string) *FCPManagementServiceGetConsumptionPoolParams {
	o.SetOrganizationID(organizationID)
	return o
}

// SetOrganizationID adds the organizationId to the f c p management service get consumption pool params
func (o *FCPManagementServiceGetConsumptionPoolParams) SetOrganizationID(organizationID string) {
	o.OrganizationID = organizationID
}

// WriteToRequest writes these params to a swagger request
func (o *FCPManagementServiceGetConsumptionPoolParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param billing_account_id
	if err := r.SetPathParam("billing_account_id", o.BillingAccountID); err != nil {
		return err
	}

	// path param consumption_pool_id
	if err := r.SetPathParam("consumption_pool_id", o.ConsumptionPoolID); err != nil {
		return err
	}

	// path param organization_id
	if err := r.SetPathParam("organization_id", o.OrganizationID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
