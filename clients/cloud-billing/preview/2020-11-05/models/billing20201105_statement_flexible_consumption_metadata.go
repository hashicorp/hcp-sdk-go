// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// Billing20201105StatementFlexibleConsumptionMetadata FlexibleConsumptionUsage contains Flexible Consumption specific properties.
//
// swagger:model billing_20201105StatementFlexibleConsumptionMetadata
type Billing20201105StatementFlexibleConsumptionMetadata struct {

	// previous_billing_period_end is the end time of the last month's billing period that was considered for
	// this usage calculation.
	// Format: date-time
	PreviousBillingPeriodEnd strfmt.DateTime `json:"previous_billing_period_end,omitempty"`

	// previous_billing_period_start is the start time of the last month's billing period that was considered
	// for this usage calculation.
	// Format: date-time
	PreviousBillingPeriodStart strfmt.DateTime `json:"previous_billing_period_start,omitempty"`

	// previous_month_statement_id is the id associated with the statement for the previous month, if it exists.
	PreviousMonthStatementID string `json:"previous_month_statement_id,omitempty"`

	// previous_month_total is the total usage for the previous month
	PreviousMonthTotal string `json:"previous_month_total,omitempty"`
}

// Validate validates this billing 20201105 statement flexible consumption metadata
func (m *Billing20201105StatementFlexibleConsumptionMetadata) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validatePreviousBillingPeriodEnd(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validatePreviousBillingPeriodStart(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *Billing20201105StatementFlexibleConsumptionMetadata) validatePreviousBillingPeriodEnd(formats strfmt.Registry) error {
	if swag.IsZero(m.PreviousBillingPeriodEnd) { // not required
		return nil
	}

	if err := validate.FormatOf("previous_billing_period_end", "body", "date-time", m.PreviousBillingPeriodEnd.String(), formats); err != nil {
		return err
	}

	return nil
}

func (m *Billing20201105StatementFlexibleConsumptionMetadata) validatePreviousBillingPeriodStart(formats strfmt.Registry) error {
	if swag.IsZero(m.PreviousBillingPeriodStart) { // not required
		return nil
	}

	if err := validate.FormatOf("previous_billing_period_start", "body", "date-time", m.PreviousBillingPeriodStart.String(), formats); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this billing 20201105 statement flexible consumption metadata based on context it is used
func (m *Billing20201105StatementFlexibleConsumptionMetadata) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *Billing20201105StatementFlexibleConsumptionMetadata) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *Billing20201105StatementFlexibleConsumptionMetadata) UnmarshalBinary(b []byte) error {
	var res Billing20201105StatementFlexibleConsumptionMetadata
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
